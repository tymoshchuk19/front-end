{"remainingRequest":"/home/canel/Code/front-end/pri-git/node_modules/babel-loader/lib/index.js!/home/canel/Code/front-end/pri-git/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/canel/Code/front-end/pri-git/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/canel/Code/front-end/pri-git/src/components/Post.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/canel/Code/front-end/pri-git/src/components/Post.vue","mtime":1580227765677},{"path":"/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBVU0VSLCBBUEkgfSBmcm9tICcuLi8uLi9jb25maWcvY29uZmlnJzsKaW1wb3J0IENvbW1lbnRzRm9ybSBmcm9tICcuLi9jb21wb25lbnRzL0NvbW1lbnRzRm9ybSc7CmltcG9ydCBDb21tZW50cyBmcm9tICcuLi9jb21wb25lbnRzL0NvbW1lbnRzJzsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKLyplc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlKi8KCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogWydwb3N0J10sCiAgY29tcG9uZW50czogewogICAgJ3dtLWNvbW1lbnRmb3JtJzogQ29tbWVudHNGb3JtLAogICAgJ3dtLWNvbW1lbnRzJzogQ29tbWVudHMKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VyOiBVU0VSLAogICAgICBubGlrZXM6IHRoaXMucG9zdC5saWtlcy5sZW5ndGgsCiAgICAgIGxpa2VkOiB0aGlzLnBvc3QubGlrZXMuaW5jbHVkZXMoVVNFUiksCiAgICAgIGNvbW1lbnRzOiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgbGlrZTogZnVuY3Rpb24gbGlrZSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGF4aW9zLnBvc3QoQVBJICsgJ3Bvc3RzLycgKyB0aGlzLnBvc3QuX2lkICsgJy9saWtlJywgewogICAgICAgIHVzZXI6IFVTRVIKICAgICAgfSkudGhlbihmdW5jdGlvbiAocCkgewogICAgICAgIGNvbnNvbGUubG9nKHAuZGF0YSk7CiAgICAgICAgX3RoaXMubmxpa2VzID0gcC5kYXRhLmxpa2VzLmxlbmd0aDsKICAgICAgICBfdGhpcy5saWtlZCA9IHAuZGF0YS5saWtlcy5pbmNsdWRlcyhVU0VSKTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0Q29tbW1lbnRzOiBmdW5jdGlvbiBnZXRDb21tbWVudHMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgYXhpb3MuZ2V0KEFQSSArICdwb3N0cy8nICsgdGhpcy5wb3N0Ll9pZCArICcvY29tbWVudHMnKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgcmV0dXJuIF90aGlzMi5jb21tZW50cyA9IGRhdGEuZGF0YTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5nZXRDb21tbWVudHMoKTsKICB9Cn07"},{"version":3,"sources":["Post.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,SAAA,IAAA,EAAA,GAAA,QAAA,qBAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AACA,OAAA,QAAA,MAAA,wBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA;;AACA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,MAAA,CADA;AAEA,EAAA,UAAA,EAAA;AACA,sBAAA,YADA;AAEA,mBAAA;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,MAAA,EAAA,KAAA,IAAA,CAAA,KAAA,CAAA,MAFA;AAGA,MAAA,KAAA,EAAA,KAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAHA;AAIA,MAAA,QAAA,EAAA;AAJA,KAAA;AAMA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AAAA;;AACA,MAAA,KAAA,CAAA,IAAA,CAAA,GAAA,GAAA,QAAA,GAAA,KAAA,IAAA,CAAA,GAAA,GAAA,OAAA,EAAA;AACA,QAAA,IAAA,EAAA;AADA,OAAA,EAGA,IAHA,CAGA,UAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA,CAAA,IAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AACA,OAPA;AAQA,KAVA;AAWA,IAAA,YAXA,0BAWA;AAAA;;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,GAAA,GAAA,QAAA,GAAA,KAAA,IAAA,CAAA,GAAA,GAAA,WAAA,EACA,IADA,CACA,UAAA,IAAA;AAAA,eAAA,MAAA,CAAA,QAAA,GAAA,IAAA,CAAA,IAAA;AAAA,OADA;AAEA;AAdA,GAdA;AA8BA,EAAA,OA9BA,qBA8BA;AACA,SAAA,YAAA;AACA;AAhCA,CAAA","sourcesContent":["<template>\n  <v-card class=\"mb-2\">\n    <v-list-item three-line>\n      <v-list-item-avatar size=\"30\" color=\"primary\">\n          <img\n            :src=\"post.image\"\n            alt=\"Semanas\"\n          >\n      </v-list-item-avatar>\n\n      <v-list-item-content>\n        <v-list-item-title class=\"headline mb-1\">{{post.title}}</v-list-item-title>\n        <!-- <v-list-item-subtitle>[{{post.type}}]</v-list-item-subtitle> -->\n        <v-list-item-action-text class=\"black--text\">{{post.body}}</v-list-item-action-text>\n      </v-list-item-content>\n    </v-list-item>\n    <v-chip \n      class=\"ma-2\"\n      v-for=\"(tag,i) in post.tags\" \n      v-bind:key=\"i\">\n      {{ tag }}\n    </v-chip>\n    <v-card-actions>\n      <v-btn @click=\"like\" class=\"indigo\" text>\n          <span class=\"white--text text-lowercase mr-2\">{{ nlikes }}</span>\n          <v-icon v-if=\"liked\" color='white'>mdi-thumb-up</v-icon>\n          <v-icon v-else color='white'>mdi-thumb-up-outline</v-icon>\n    </v-btn>\n    </v-card-actions>\n    <wm-commentform :postid=\"post._id\"></wm-commentform>\n    <wm-comments :coms=\"comments\" ></wm-comments>\n  </v-card>\n</template>\n\n<script>\nimport { USER, API } from '../../config/config';\nimport CommentsForm from '../components/CommentsForm';\nimport Comments from '../components/Comments'\nimport axios from \"axios\";\n\n/*eslint-disable no-console*/\nexport default {\n  props: ['post'],\n  components: {\n    'wm-commentform': CommentsForm,\n    'wm-comments': Comments\n  },\n  data() {\n    return {\n      user : USER,\n      nlikes: this.post.likes.length,\n      liked: this.post.likes.includes(USER),\n      comments: null\n    }\n  },\n  methods: {\n    like() {\n      axios.post(API + 'posts/' + this.post._id + '/like', {\n        user: USER\n      })\n        .then(p => {\n          console.log(p.data)\n          this.nlikes = p.data.likes.length;\n          this.liked = p.data.likes.includes(USER);\n        });\n    },\n    getCommments() {\n      axios.get(API + 'posts/' + this.post._id + '/comments')\n        .then(data => this.comments = data.data);\n    }\n  },\n  mounted() {\n    this.getCommments();\n  }\n  \n}\n</script>"],"sourceRoot":"src/components"}]}