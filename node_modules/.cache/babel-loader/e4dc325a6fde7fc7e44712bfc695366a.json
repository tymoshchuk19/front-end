{"remainingRequest":"/workspace/front-end/node_modules/babel-loader/lib/index.js!/workspace/front-end/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/workspace/front-end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/workspace/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspace/front-end/src/components/Post.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspace/front-end/src/components/Post.vue","mtime":1580314468932},{"path":"/workspace/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1580239219881},{"path":"/workspace/front-end/node_modules/babel-loader/lib/index.js","mtime":1580239219861},{"path":"/workspace/front-end/node_modules/vuetify-loader/lib/loader.js","mtime":1580239220578},{"path":"/workspace/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1580239219881},{"path":"/workspace/front-end/node_modules/vue-loader/lib/index.js","mtime":1580239220548}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL3dvcmtzcGFjZS9mcm9udC1lbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IFVTRVIsIEFQSSB9IGZyb20gIi4uLy4uL2NvbmZpZy9jb25maWciOwppbXBvcnQgQ29tbWVudHNGb3JtIGZyb20gIi4uL2NvbXBvbmVudHMvQ29tbWVudHNGb3JtIjsKaW1wb3J0IENvbW1lbnRzIGZyb20gIi4uL2NvbXBvbmVudHMvQ29tbWVudHMiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAidnVleCI7CmltcG9ydCBtb21lbnQgZnJvbSAibW9tZW50IjsKLyplc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlKi8KCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogWyJwb3N0Il0sCiAgY29tcG9uZW50czogewogICAgIndtLWNvbW1lbnRmb3JtIjogQ29tbWVudHNGb3JtLAogICAgIndtLWNvbW1lbnRzIjogQ29tbWVudHMKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBubGlrZXM6IHRoaXMucG9zdC5saWtlcy5sZW5ndGgsCiAgICAgIGxpa2VkOiBmYWxzZSwKICAgICAgY29tbWVudHM6IHRoaXMucG9zdC5jb21tZW50cywKICAgICAgZnJvbU5vdzogdGhpcy5wb3N0LmZyb21Ob3cKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBsaWtlOiBmdW5jdGlvbiBsaWtlKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgYXhpb3MucG9zdChBUEkgKyAicG9zdHMvIiArIHRoaXMucG9zdC5faWQgKyAiL2xpa2UiLCB7CiAgICAgICAgdXNlcjogVVNFUgogICAgICB9KS50aGVuKGZ1bmN0aW9uIChwKSB7CiAgICAgICAgX3RoaXMubmxpa2VzID0gcC5kYXRhLmxpa2VzLmxlbmd0aDsKICAgICAgICBfdGhpcy5saWtlZCA9IHAuZGF0YS5saWtlcy5pbmNsdWRlcyhfdGhpcy5pZCk7CiAgICAgIH0pOwogICAgfSwKICAgIGdldENvbW1lbnRzOiBmdW5jdGlvbiBnZXRDb21tZW50cygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBheGlvcy5nZXQoQVBJICsgInBvc3RzLyIgKyB0aGlzLnBvc3QuX2lkICsgIi9jb21tZW50cyIpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBfdGhpczIuY29tbWVudHMgPSBkYXRhLmRhdGE7CiAgICAgIH0pOwogICAgfSwKICAgIGlzTGlrZWQ6IGZ1bmN0aW9uIGlzTGlrZWQoKSB7CiAgICAgIHRoaXMubGlrZWQgPSB0aGlzLnBvc3QubGlrZXMuaW5jbHVkZXModGhpcy5pZCk7CiAgICB9LAogICAgdXBkYXRlRnJvbU5vdzogZnVuY3Rpb24gdXBkYXRlRnJvbU5vdygpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMzLmZyb21Ob3cgPSBtb21lbnQoX3RoaXMzLnBvc3QuZGF0ZSkuZnJvbU5vdygpOwogICAgICB9LCA2MDAwMCk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgLy8gdGhpcy5nZXRDb21tZW50cygpOwogICAgdGhpcy5pc0xpa2VkKCk7CiAgICB0aGlzLnVwZGF0ZUZyb21Ob3coKTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKHsKICAgIGlkOiAiZ2V0SWQiCiAgfSkpCn07"},{"version":3,"sources":["Post.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,SAAA,IAAA,EAAA,GAAA,QAAA,qBAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AACA,OAAA,QAAA,MAAA,wBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,MAAA,MAAA,QAAA;AAEA;;AACA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,MAAA,CADA;AAEA,EAAA,UAAA,EAAA;AACA,sBAAA,YADA;AAEA,mBAAA;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KAAA,IAAA,CAAA,KAAA,CAAA,MADA;AAEA,MAAA,KAAA,EAAA,KAFA;AAGA,MAAA,QAAA,EAAA,KAAA,IAAA,CAAA,QAHA;AAIA,MAAA,OAAA,EAAA,KAAA,IAAA,CAAA;AAJA,KAAA;AAMA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,kBACA;AAAA;;AACA,MAAA,KAAA,CACA,IADA,CACA,GAAA,GAAA,QAAA,GAAA,KAAA,IAAA,CAAA,GAAA,GAAA,OADA,EACA;AACA,QAAA,IAAA,EAAA;AADA,OADA,EAIA,IAJA,CAIA,UAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,EAAA,CAAA;AACA,OAPA;AAQA,KAVA;AAWA,IAAA,WAXA,yBAWA;AAAA;;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,GAAA,GAAA,QAAA,GAAA,KAAA,IAAA,CAAA,GAAA,GAAA,WAAA,EAAA,IAAA,CAAA,UAAA,IAAA,EAAA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,IAAA,CAAA,IAAA;AACA,OAFA;AAGA,KAfA;AAgBA,IAAA,OAhBA,qBAgBA;AACA,WAAA,KAAA,GAAA,KAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,KAAA,EAAA,CAAA;AACA,KAlBA;AAmBA,IAAA,aAnBA,2BAmBA;AAAA;;AACA,MAAA,WAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,OAAA,EAAA;AACA,OAFA,EAEA,KAFA,CAAA;AAGA;AAvBA,GAdA;AAuCA,EAAA,OAvCA,qBAuCA;AACA;AACA,SAAA,OAAA;AACA,SAAA,aAAA;AACA,GA3CA;AA4CA,EAAA,QAAA,oBACA,UAAA,CAAA;AACA,IAAA,EAAA,EAAA;AADA,GAAA,CADA;AA5CA,CAAA","sourcesContent":["<template>\n  <v-card class=\"mb-2\">\n    <v-list-item three-line>\n      <v-menu v-model=\"menu\" top transition=\"slide-y-transition\" origin=\"bottom\">\n        <template v-slot:activator=\"{ on }\">\n          <v-list-item-avatar v-on=\"on\" size=\"40\" color=\"primary\">\n            <img :src=\"post.posted_by.image\" :alt=\"post.posted_by.nome\" />\n          </v-list-item-avatar>\n        </template>\n        <v-card width=\"280\">\n          <v-img :src=\"post.posted_by.image\"></v-img>\n          <v-list class=\"no-border\" dark tile>\n            <v-list-item>\n              <v-list-item-content>\n                <v-list-item-title>{{post.posted_by.nome}}</v-list-item-title>\n                <v-list-item-subtitle>{{post.posted_by.email}}</v-list-item-subtitle>\n              </v-list-item-content>\n              <v-list-item-action>\n                <v-btn icon @click=\"menu = false\">\n                  <v-icon>mdi-account-box</v-icon>\n                </v-btn>\n              </v-list-item-action>\n            </v-list-item>\n          </v-list>\n          <v-list-item @click=\"() => {}\">\n            <v-icon class=\"ma-auto\">mdi-message-text</v-icon>\n          </v-list-item>\n        </v-card>\n      </v-menu>\n\n      <v-list-item-content>\n        <v-list-item-title class=\"headline mb-0\">{{post.title}}</v-list-item-title>\n        <v-list-item-action-text>{{fromNow}}</v-list-item-action-text>\n        <v-chip-group column>\n          <v-chip v-for=\"tag in post.tags\" :key=\"tag\">{{ tag }}</v-chip>\n        </v-chip-group>\n\n        <v-list-item-action-text class=\"black--text mt-2 body-1\">{{post.body}}</v-list-item-action-text>\n      </v-list-item-content>\n    </v-list-item>\n    <v-card-actions class=\"d-flex flex-row-reverse\">\n      <v-btn @click=\"like\" class=\"indigo\" text rounded>\n        <span class=\"white--text text-lowercase mr-2\">{{ nlikes }}</span>\n        <v-icon v-if=\"liked\" color=\"white\">mdi-thumb-up</v-icon>\n        <v-icon v-else color=\"white\">mdi-thumb-up-outline</v-icon>\n      </v-btn>\n    </v-card-actions>\n\n    <wm-comments @newLike=\"getComments\" :postid=\"post._id\" :coms=\"comments\"></wm-comments>\n    <wm-commentform @newComment=\"getComments\" :postid=\"post._id\"></wm-commentform>\n  </v-card>\n</template>\n\n<script>\nimport { USER, API } from \"../../config/config\";\nimport CommentsForm from \"../components/CommentsForm\";\nimport Comments from \"../components/Comments\";\nimport axios from \"axios\";\nimport { mapGetters } from \"vuex\";\nimport moment from \"moment\";\n\n/*eslint-disable no-console*/\nexport default {\n  props: [\"post\"],\n  components: {\n    \"wm-commentform\": CommentsForm,\n    \"wm-comments\": Comments\n  },\n  data() {\n    return {\n      nlikes: this.post.likes.length,\n      liked: false,\n      comments: this.post.comments,\n      fromNow: this.post.fromNow\n    };\n  },\n  methods: {\n    like() {\n      axios\n        .post(API + \"posts/\" + this.post._id + \"/like\", {\n          user: USER\n        })\n        .then(p => {\n          this.nlikes = p.data.likes.length;\n          this.liked = p.data.likes.includes(this.id);\n        });\n    },\n    getComments() {\n      axios.get(API + \"posts/\" + this.post._id + \"/comments\").then(data => {\n        this.comments = data.data;\n      });\n    },\n    isLiked() {\n      this.liked = this.post.likes.includes(this.id);\n    },\n    updateFromNow() {\n      setInterval(() => {\n        this.fromNow = moment(this.post.date).fromNow();\n      }, 60000);\n    }\n  },\n  mounted() {\n    // this.getComments();\n    this.isLiked();\n    this.updateFromNow();\n  },\n  computed: {\n    ...mapGetters({\n      id: \"getId\"\n    })\n  }\n};\n</script>\n\n<style scoped>\n.no-border {\n  border-radius: 0px;\n}\n</style>"],"sourceRoot":"src/components"}]}