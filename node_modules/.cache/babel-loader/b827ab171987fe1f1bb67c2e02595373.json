{"remainingRequest":"/workspace/front-end/node_modules/babel-loader/lib/index.js!/workspace/front-end/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/workspace/front-end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/workspace/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspace/front-end/src/components/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspace/front-end/src/components/Chat.vue","mtime":1580401473846},{"path":"/workspace/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1580239219881},{"path":"/workspace/front-end/node_modules/babel-loader/lib/index.js","mtime":1580239219861},{"path":"/workspace/front-end/node_modules/vuetify-loader/lib/loader.js","mtime":1580239220578},{"path":"/workspace/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1580239219881},{"path":"/workspace/front-end/node_modules/vue-loader/lib/index.js","mtime":1580239220548}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi8KaW1wb3J0IHsgQVBJIH0gZnJvbSAiLi4vLi4vY29uZmlnL2NvbmZpZyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7IC8vIGltcG9ydCBMb2dzIGZyb20gIi4vTG9ncyI7Ci8vIGltcG9ydCBMaXN0IGZyb20gIi4vTGlzdCI7Ci8vIGltcG9ydCBQcm9maWxlIGZyb20gIi4vUHJvZmlsZSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkNoYXQiLAogIGNvbXBvbmVudHM6IHsvLyBMb2dzLAogICAgLy8gTGlzdCwKICAgIC8vIFByb2ZpbGUKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldENvbnZlcnNhdGlvbnMoKTsKICAgIHRoaXMuZ2V0TWVzc2FnZXMoKTsKICAgIHRoaXMuZ2V0TWVzc2FnZXNUaW1lcigpOwogICAgdGhpcy5nZXRVc2VyRGF0YSgpOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbnZlcnNhdGlvbnM6IG51bGwsCiAgICAgIGN1cnJlbnRDb252ZXJzYXRpb246IG51bGwsCiAgICAgIG1lc3NhZ2VzOiBudWxsLAogICAgICBtZXNzYWdlOiBudWxsLAogICAgICB1c2VyRGF0YTogbnVsbAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldENvbnZlcnNhdGlvbnM6IGZ1bmN0aW9uIGdldENvbnZlcnNhdGlvbnMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBheGlvcy5nZXQoIiIuY29uY2F0KEFQSSwgImNvbnZlcnNhdGlvbnMiKSkudGhlbihmdW5jdGlvbiAoX3JlZikgewogICAgICAgIHZhciBkYXRhID0gX3JlZi5kYXRhOwogICAgICAgIF90aGlzLmNvbnZlcnNhdGlvbnMgPSBkYXRhOwogICAgICAgIF90aGlzLmN1cnJlbnRDb252ZXJzYXRpb24gPSBkYXRhWzBdLl9pZDsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0TWVzc2FnZXM6IGZ1bmN0aW9uIGdldE1lc3NhZ2VzKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIGlmICh0aGlzLmN1cnJlbnRDb252ZXJzYXRpb24pIHsKICAgICAgICBheGlvcy5nZXQoIiIuY29uY2F0KEFQSSwgImNvbnZlcnNhdGlvbnMvIikuY29uY2F0KHRoaXMuY3VycmVudENvbnZlcnNhdGlvbiwgIi9tZXNzYWdlcyIpKS50aGVuKGZ1bmN0aW9uIChfcmVmMikgewogICAgICAgICAgdmFyIGRhdGEgPSBfcmVmMi5kYXRhOwogICAgICAgICAgX3RoaXMyLm1lc3NhZ2VzID0gZGF0YTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIHBvc3RNZXNzYWdlOiBmdW5jdGlvbiBwb3N0TWVzc2FnZShtZXNzYWdlKSB7CiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgYXhpb3MucG9zdCgiIi5jb25jYXQoQVBJLCAiY29udmVyc2F0aW9ucy8iKS5jb25jYXQodGhpcy5jdXJyZW50Q29udmVyc2F0aW9uLCAiL21lc3NhZ2VzIiksIHsKICAgICAgICAgIGNvbnRlbnQ6IG1lc3NhZ2UsCiAgICAgICAgICB0eXBlOiAidGV4dCIKICAgICAgICB9KS50aGVuKHRoaXMuZ2V0TWVzc2FnZXMpOwogICAgICAgIHRoaXMubWVzc2FnZSA9ICIiOwogICAgICB9CiAgICB9LAogICAgZ2V0TWVzc2FnZXNUaW1lcjogZnVuY3Rpb24gZ2V0TWVzc2FnZXNUaW1lcigpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMzLmdldE1lc3NhZ2VzKCk7CiAgICAgIH0sIDMwMDApOwogICAgfSwKICAgIGdldFVzZXJEYXRhOiBmdW5jdGlvbiBnZXRVc2VyRGF0YSgpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICBheGlvcy5nZXQoIiIuY29uY2F0KEFQSSwgInVzZXJzLyIpLmNvbmNhdCh0aGlzLnVzZXIpKS50aGVuKGZ1bmN0aW9uIChfcmVmMykgewogICAgICAgIHZhciBkYXRhID0gX3JlZjMuZGF0YTsKICAgICAgICBfdGhpczQudXNlckRhdGEgPSBkYXRhOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA,SAAA,GAAA,QAAA,qBAAA;AAEA,OAAA,KAAA,MAAA,OAAA,C,CAEA;AACA;AACA;;AACA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAGA,EAAA,UAAA,EAAA,CACA;AACA;AACA;AAHA,GAHA;AAQA,EAAA,OARA,qBAQA;AACA,SAAA,gBAAA;AACA,SAAA,WAAA;AACA,SAAA,gBAAA;AACA,SAAA,WAAA;AACA,GAbA;AAcA,EAAA,IAdA,kBAcA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,IADA;AAEA,MAAA,mBAAA,EAAA,IAFA;AAGA,MAAA,QAAA,EAAA,IAHA;AAIA,MAAA,OAAA,EAAA,IAJA;AAKA,MAAA,QAAA,EAAA;AALA,KAAA;AAOA,GAtBA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AAAA;;AACA,MAAA,KAAA,CAAA,GAAA,WAAA,GAAA,oBAAA,IAAA,CAAA,gBAAA;AAAA,YAAA,IAAA,QAAA,IAAA;AACA,QAAA,KAAA,CAAA,aAAA,GAAA,IAAA;AACA,QAAA,KAAA,CAAA,mBAAA,GAAA,IAAA,CAAA,CAAA,CAAA,CAAA,GAAA;AACA,OAHA;AAIA,KANA;AAOA,IAAA,WAPA,yBAOA;AAAA;;AACA,UAAA,KAAA,mBAAA,EAAA;AACA,QAAA,KAAA,CACA,GADA,WACA,GADA,2BACA,KAAA,mBADA,gBAEA,IAFA,CAEA,iBAAA;AAAA,cAAA,IAAA,SAAA,IAAA;AACA,UAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,SAJA;AAKA;AACA,KAfA;AAgBA,IAAA,WAhBA,uBAgBA,OAhBA,EAgBA;AACA,UAAA,OAAA,EAAA;AACA,QAAA,KAAA,CACA,IADA,WACA,GADA,2BACA,KAAA,mBADA,gBACA;AACA,UAAA,OAAA,EAAA,OADA;AAEA,UAAA,IAAA,EAAA;AAFA,SADA,EAKA,IALA,CAKA,KAAA,WALA;AAMA,aAAA,OAAA,GAAA,EAAA;AACA;AACA,KA1BA;AA2BA,IAAA,gBA3BA,8BA2BA;AAAA;;AACA,MAAA,WAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,WAAA;AACA,OAFA,EAEA,IAFA,CAAA;AAGA,KA/BA;AAgCA,IAAA,WAhCA,yBAgCA;AAAA;;AACA,MAAA,KAAA,CAAA,GAAA,WAAA,GAAA,mBAAA,KAAA,IAAA,GAAA,IAAA,CAAA,iBAAA;AAAA,YAAA,IAAA,SAAA,IAAA;AACA,QAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,OAFA;AAGA;AApCA;AAvBA,CAAA","sourcesContent":["<template>\n  <v-container fluid fill-height class=\"ma-0 pa-0\">\n    <v-layout text-center wrap>\n      <!-- <v-row no-gutters>\n        <v-col cols=\"2\">\n          <List\n            :userData=\"userData\"\n            :conversations=\"conversations\"\n            v-on:select-conversation=\"currentConversation = $event\"\n            v-on:new-conversation=\"getConversations\"\n          />\n        </v-col>\n        <v-col cols=\"7\" class=\"grey lighten-2 relative full-height\">\n          <div class=\"msger\">\n            <div id=\"chat-col\" class=\"chat-overflow\" v-chat-scroll>\n              <Logs :messages=\"messages\" />\n            </div>\n            <v-footer color>\n              <v-btn class=\"ml-3\" icon color=\"primary\">\n                <v-icon class=\"mr-3\" size=\"37\" color=\"primary\"\n                  >mdi-plus-circle</v-icon\n                >\n              </v-btn>\n              <v-text-field\n                v-model=\"message\"\n                rounded\n                outlined\n                dense\n                hide-details\n                placeholder=\"Escreve uma mensagem\"\n                v-on:keyup.enter=\"postMessage(message)\"\n              ></v-text-field>\n              <v-btn\n                class=\"ml-3\"\n                icon\n                color=\"primary\"\n                v-on:click=\"postMessage(message)\"\n              >\n                <v-icon size=\"37\">mdi-send-circle</v-icon>\n              </v-btn>\n            </v-footer>\n          </div>\n        </v-col>\n        <v-col cols=\"3\">\n          <Profile />\n        </v-col>\n      </v-row>-->\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\n/* eslint-disable no-console */\nimport { API } from \"../../config/config\";\n\nimport axios from \"axios\";\n\n// import Logs from \"./Logs\";\n// import List from \"./List\";\n// import Profile from \"./Profile\";\nexport default {\n  name: \"Chat\",\n\n  components: {\n    // Logs,\n    // List,\n    // Profile\n  },\n  mounted() {\n    this.getConversations();\n    this.getMessages();\n    this.getMessagesTimer();\n    this.getUserData();\n  },\n  data() {\n    return {\n      conversations: null,\n      currentConversation: null,\n      messages: null,\n      message: null,\n      userData: null\n    };\n  },\n  methods: {\n    getConversations() {\n      axios.get(`${API}conversations`).then(({ data }) => {\n        this.conversations = data;\n        this.currentConversation = data[0]._id;\n      });\n    },\n    getMessages() {\n      if (this.currentConversation) {\n        axios\n          .get(`${API}conversations/${this.currentConversation}/messages`)\n          .then(({ data }) => {\n            this.messages = data;\n          });\n      }\n    },\n    postMessage(message) {\n      if (message) {\n        axios\n          .post(`${API}conversations/${this.currentConversation}/messages`, {\n            content: message,\n            type: \"text\"\n          })\n          .then(this.getMessages);\n        this.message = \"\";\n      }\n    },\n    getMessagesTimer() {\n      setInterval(() => {\n        this.getMessages();\n      }, 3000);\n    },\n    getUserData() {\n      axios.get(`${API}users/${this.user}`).then(({ data }) => {\n        this.userData = data;\n      });\n    }\n  }\n};\n</script>\n\n<style>\n.full-height {\n  height: 91.2vh;\n  /* height: 96.2vh; */\n}\n\n.chat-height {\n  height: auto;\n}\n\n.rounded-card {\n  border-radius: 50px !important;\n}\n\n.chat-background {\n  background-color: aqua;\n}\n\n.relative {\n  position: relative;\n}\n\n.chat-overflow {\n  flex: 1;\n  overflow-y: scroll;\n}\n\nhtml {\n  overflow-y: hidden;\n}\n\nbody {\n  height: 100vh;\n}\n\n.chat-sticky {\n  position: fixed !important;\n}\n\n.msger {\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: space-between;\n  width: 100%;\n  height: 100%;\n}\n</style>\n"],"sourceRoot":"src/components"}]}