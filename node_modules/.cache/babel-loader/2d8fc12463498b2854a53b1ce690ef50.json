{"remainingRequest":"/home/canel/Code/front-end/pri-git/node_modules/babel-loader/lib/index.js!/home/canel/Code/front-end/pri-git/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/canel/Code/front-end/pri-git/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/canel/Code/front-end/pri-git/src/components/TasksForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/canel/Code/front-end/pri-git/src/components/TasksForm.vue","mtime":1580251547034},{"path":"/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgdmFsaWRhdGlvbk1peGluIH0gZnJvbSAndnVlbGlkYXRlJzsKaW1wb3J0IHsgcmVxdWlyZWQgfSBmcm9tICd2dWVsaWRhdGUvbGliL3ZhbGlkYXRvcnMnOwppbXBvcnQgTVdEYXRlIGZyb20gJy4uL2NvbXBvbmVudHMvRGF0ZSc7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7Ci8qZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSovCgpleHBvcnQgZGVmYXVsdCB7CiAgbWl4aW5zOiBbdmFsaWRhdGlvbk1peGluXSwKICBwcm9wczogWyd0YXNrQXBpJ10sCiAgY29tcG9uZW50czogewogICAgJ3dtLWRhdGUnOiBNV0RhdGUKICB9LAogIHZhbGlkYXRpb25zOiB7CiAgICB0aXRsZTogewogICAgICByZXF1aXJlZDogcmVxdWlyZWQKICAgIH0sCiAgICBkYXRlOiB7CiAgICAgIHJlcXVpcmVkOiByZXF1aXJlZAogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRpYWxvZzogZmFsc2UsCiAgICAgIHRpdGxlOiAnJywKICAgICAgZGF0ZTogJycKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgdGl0bGVFcnJvcnM6IGZ1bmN0aW9uIHRpdGxlRXJyb3JzKCkgewogICAgICB2YXIgZXJyb3JzID0gW107CiAgICAgIGlmICghdGhpcy4kdi50aXRsZS4kZGlydHkpIHJldHVybiBlcnJvcnM7CiAgICAgICF0aGlzLiR2LnRpdGxlLnJlcXVpcmVkICYmIGVycm9ycy5wdXNoKCdUaXRsZSBpcyByZXF1aXJlZC4nKTsKICAgICAgcmV0dXJuIGVycm9yczsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZURhdGU6IGZ1bmN0aW9uIHVwZGF0ZURhdGUodXBkYXRlZERhdGUpIHsKICAgICAgdGhpcy5kYXRlID0gdXBkYXRlZERhdGU7CiAgICB9LAogICAgc3VibWl0OiBmdW5jdGlvbiBzdWJtaXQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBheGlvcy5wb3N0KHRoaXMudGFza0FwaSwgewogICAgICAgIHRpdGxlOiB0aGlzLnRpdGxlLAogICAgICAgIGRhdGU6IHRoaXMuZGF0ZQogICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy4kZW1pdCgnbmV3VGFzaycpOwoKICAgICAgICBfdGhpcy5jbGVhcigpOwogICAgICB9KTsKICAgIH0sCiAgICBjbGVhcjogZnVuY3Rpb24gY2xlYXIoKSB7CiAgICAgIHRoaXMuJHYuJHJlc2V0KCk7CiAgICAgIHRoaXMudGl0bGUgPSAnJzsKICAgICAgdGhpcy5kYXRlID0gJyc7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["TasksForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,SAAA,eAAA,QAAA,WAAA;AACA,SAAA,QAAA,QAAA,0BAAA;AACA,OAAA,MAAA,MAAA,oBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA;;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,eAAA,CADA;AAEA,EAAA,KAAA,EAAA,CAAA,SAAA,CAFA;AAGA,EAAA,UAAA,EAAA;AACA,eAAA;AADA,GAHA;AAMA,EAAA,WAAA,EAAA;AACA,IAAA,KAAA,EAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KADA;AAEA,IAAA,IAAA,EAAA;AAAA,MAAA,QAAA,EAAA;AAAA;AAFA,GANA;AAWA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,MAAA,EAAA,KADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,IAAA,EAAA;AAHA,KAAA;AAAA,GAXA;AAgBA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,UAAA,MAAA,GAAA,EAAA;AACA,UAAA,CAAA,KAAA,EAAA,CAAA,KAAA,CAAA,MAAA,EAAA,OAAA,MAAA;AACA,OAAA,KAAA,EAAA,CAAA,KAAA,CAAA,QAAA,IAAA,MAAA,CAAA,IAAA,CAAA,oBAAA,CAAA;AACA,aAAA,MAAA;AACA;AANA,GAhBA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,WADA,EACA;AACA,WAAA,IAAA,GAAA,WAAA;AACA,KAHA;AAIA,IAAA,MAJA,oBAIA;AAAA;;AACA,MAAA,KAAA,CAAA,IAAA,CAAA,KAAA,OAAA,EAAA;AACA,QAAA,KAAA,EAAA,KAAA,KADA;AAEA,QAAA,IAAA,EAAA,KAAA;AAFA,OAAA,EAIA,IAJA,CAIA,YAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,SAAA;;AACA,QAAA,KAAA,CAAA,KAAA;AACA,OAPA;AAQA,KAbA;AAcA,IAAA,KAdA,mBAcA;AACA,WAAA,EAAA,CAAA,MAAA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,WAAA,IAAA,GAAA,EAAA;AACA;AAlBA;AAxBA,CAAA","sourcesContent":["<template>\n  <v-row justify=\"center\">\n    <v-dialog v-model=\"dialog\" persistent max-width=\"290\">\n      <template v-slot:activator=\"{ on }\">\n        <v-btn block tile color=\"primary\" dark v-on=\"on\">\n          <v-list-item-avatar size=\"20\" color=\"primary\">\n            <v-img src=\"https://scontent.fopo1-1.fna.fbcdn.net/v/t31.0-1/c25.0.100.100a/p100x100/1232980_317180055124740_2248433128634441547_o.jpg?_nc_cat=102&_nc_ohc=hUdr1bIfKMEAX9iQFkO&_nc_ht=scontent.fopo1-1.fna&_nc_tp=1003&oh=0e9cc0ee6c92cb02c5e3903214d4aef3&oe=5EDBA4F3\">\n            </v-img>\n          </v-list-item-avatar>\n          New Task\n        </v-btn>\n      </template>\n      <v-card class=\"pl-2 pb-2 mb-2\">\n        <form>\n          <v-text-field\n            v-model=\"title\"\n            :error-messages=\"titleErrors\"\n            label=\"Title\"\n            required\n            @input=\"$v.title.$touch()\"\n            @blur=\"$v.title.$touch()\"\n          ></v-text-field>\n\n          <wm-date @newDate=\"updateDate($event)\"></wm-date>\n\n          <v-btn class=\"mr-4\" @click=\"submit\">submit</v-btn>\n          <v-btn color=\"primary darken-1\" text @click=\"dialog = false\">Close</v-btn>\n        </form>\n      </v-card>\n    </v-dialog>\n  </v-row>\n</template>\n\n<script>\n  import { validationMixin } from 'vuelidate';\n  import { required } from 'vuelidate/lib/validators';\n  import MWDate from '../components/Date'\n  import axios from \"axios\";\n\n  /*eslint-disable no-console*/\n\n  export default {\n    mixins: [validationMixin],\n    props: ['taskApi'],\n    components: {\n      'wm-date': MWDate,\n    },\n    validations: {\n      title: { required },\n      date: { required }\n    },\n\n    data: () => ({\n      dialog: false,\n      title: '',\n      date: ''\n    }),\n    computed: {\n      titleErrors () {\n        const errors = []\n        if (!this.$v.title.$dirty) return errors\n        !this.$v.title.required && errors.push('Title is required.')\n        return errors\n      }\n    },\n    methods: {\n      updateDate(updatedDate) {\n        this.date = updatedDate;\n      },\n      submit () {\n        axios.post(this.taskApi, {\n            title: this.title,\n            date: this.date\n        })\n            .then(() => { \n            this.$emit('newTask'); \n            this.clear()\n            });\n      },\n      clear () {\n        this.$v.$reset()\n        this.title = ''\n        this.date = ''\n      }\n    }\n  }\n</script>"],"sourceRoot":"src/components"}]}