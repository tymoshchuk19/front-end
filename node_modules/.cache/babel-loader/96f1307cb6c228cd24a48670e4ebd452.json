{"remainingRequest":"/home/canel/Code/front-end/pri-git/node_modules/babel-loader/lib/index.js!/home/canel/Code/front-end/pri-git/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/canel/Code/front-end/pri-git/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/canel/Code/front-end/pri-git/src/views/GroupPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/canel/Code/front-end/pri-git/src/views/GroupPage.vue","mtime":1580323658843},{"path":"/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFBvc3RzIGZyb20gJy4uL2NvbXBvbmVudHMvUG9zdHMnOwppbXBvcnQgUG9zdEZvcm0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3N0Rm9ybSc7CmltcG9ydCBXb3JrdW0gZnJvbSAnLi4vY29tcG9uZW50cy9Xb3JrdW0nOwppbXBvcnQgSGVhZGVyIGZyb20gJy4uL2NvbXBvbmVudHMvSGVhZGVyJzsKaW1wb3J0IFNpZ25vdXQgZnJvbSAnLi4vY29tcG9uZW50cy9TaWdub3V0JzsKaW1wb3J0IFRhc2tzIGZyb20gJy4uL2NvbXBvbmVudHMvVGFza3MnOwppbXBvcnQgVGFza3NGb3JtIGZyb20gJy4uL2NvbXBvbmVudHMvVGFza3NGb3JtJzsKaW1wb3J0IEdyb3VwRm9ybSBmcm9tICcuLi9jb21wb25lbnRzL0dyb3VwRm9ybSc7CmltcG9ydCBHcm91cHMgZnJvbSAnLi4vY29tcG9uZW50cy9Hcm91cHMnOwppbXBvcnQgeyBBUEkgfSBmcm9tICcuLi8uLi9jb25maWcvY29uZmlnJzsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IEZvb3RlciBmcm9tICcuLi9jb21wb25lbnRzL0Zvb3Rlcic7CmltcG9ydCBTaWRlQmFyIGZyb20gJy4uL2NvbXBvbmVudHMvU2lkZUJhcic7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICAnd20tcG9zdHMnOiBQb3N0cywKICAgICd3bS1wb3N0Zm9ybSc6IFBvc3RGb3JtLAogICAgJ3dtLXdvcmt1bSc6IFdvcmt1bSwKICAgICd3bS1oZWFkZXInOiBIZWFkZXIsCiAgICAnd20tc2lnbm91dCc6IFNpZ25vdXQsCiAgICAnd20tdGFza3MnOiBUYXNrcywKICAgICd3bS10YXNrZm9ybSc6IFRhc2tzRm9ybSwKICAgICd3bS1ncm91cGZvcm0nOiBHcm91cEZvcm0sCiAgICAnd20tZ3JvdXBzJzogR3JvdXBzLAogICAgJ3dtLWZvb3Rlcic6IEZvb3RlciwKICAgICd3bS1zaWRlYmFyJzogU2lkZUJhcgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGdyb3VwOiB7CiAgICAgICAgbmFtZTogbnVsbAogICAgICB9LAogICAgICBwb3N0czogbnVsbCwKICAgICAgZ3JvdXBzOiBudWxsLAogICAgICB0YXNrczogbnVsbCwKICAgICAgcG9zdEFwaTogQVBJICsgJ2dyb3Vwcy8nICsgdGhpcy4kcm91dGUucGFyYW1zLmdyb3VwX2lkICsgJy9wb3N0cycsCiAgICAgIHRhc2tBcGk6IEFQSSArICdncm91cHMvJyArIHRoaXMuJHJvdXRlLnBhcmFtcy5ncm91cF9pZCArICcvdGFza3MnCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0UG9zdHM6IGZ1bmN0aW9uIGdldFBvc3RzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgYXhpb3MuZ2V0KHRoaXMucG9zdEFwaSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIHJldHVybiBfdGhpcy5wb3N0cyA9IGRhdGEuZGF0YS5wb3N0czsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0R3JvdXA6IGZ1bmN0aW9uIGdldEdyb3VwKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIGF4aW9zLmdldChBUEkgKyAnZ3JvdXBzLycgKyB0aGlzLiRyb3V0ZS5wYXJhbXMuZ3JvdXBfaWQpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICByZXR1cm4gX3RoaXMyLmdyb3VwID0gZGF0YS5kYXRhOwogICAgICB9KTsKICAgIH0sCiAgICBnZXRHcm91cHM6IGZ1bmN0aW9uIGdldEdyb3VwcygpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICBheGlvcy5nZXQoQVBJICsgJ2dyb3VwcycpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICByZXR1cm4gX3RoaXMzLmdyb3VwcyA9IGRhdGEuZGF0YTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0VGFza3M6IGZ1bmN0aW9uIGdldFRhc2tzKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIGF4aW9zLmdldCh0aGlzLnRhc2tBcGkpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICByZXR1cm4gX3RoaXM0LnRhc2tzID0gZGF0YS5kYXRhOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldEdyb3VwKCk7CiAgICB0aGlzLmdldEdyb3VwcygpOwogICAgdGhpcy5nZXRQb3N0cygpOwogICAgdGhpcy5nZXRUYXNrcygpOwogIH0KfTs="},{"version":3,"sources":["GroupPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,OAAA,KAAA,MAAA,qBAAA;AACA,OAAA,QAAA,MAAA,wBAAA;AACA,OAAA,MAAA,MAAA,sBAAA;AACA,OAAA,MAAA,MAAA,sBAAA;AACA,OAAA,OAAA,MAAA,uBAAA;AACA,OAAA,KAAA,MAAA,qBAAA;AACA,OAAA,SAAA,MAAA,yBAAA;AACA,OAAA,SAAA,MAAA,yBAAA;AACA,OAAA,MAAA,MAAA,sBAAA;AACA,SAAA,GAAA,QAAA,qBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,MAAA,MAAA,sBAAA;AACA,OAAA,OAAA,MAAA,uBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,gBAAA,KADA;AAEA,mBAAA,QAFA;AAGA,iBAAA,MAHA;AAIA,iBAAA,MAJA;AAKA,kBAAA,OALA;AAMA,gBAAA,KANA;AAOA,mBAAA,SAPA;AAQA,oBAAA,SARA;AASA,iBAAA,MATA;AAUA,iBAAA,MAVA;AAWA,kBAAA;AAXA,GADA;AAcA,EAAA,IAdA,kBAcA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OADA;AAEA,MAAA,KAAA,EAAA,IAFA;AAGA,MAAA,MAAA,EAAA,IAHA;AAIA,MAAA,KAAA,EAAA,IAJA;AAKA,MAAA,OAAA,EAAA,GAAA,GAAA,SAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,QAAA,GAAA,QALA;AAMA,MAAA,OAAA,EAAA,GAAA,GAAA,SAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,QAAA,GAAA;AANA,KAAA;AAQA,GAvBA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,KAAA,OAAA,EACA,IADA,CACA,UAAA,IAAA;AAAA,eAAA,KAAA,CAAA,KAAA,GAAA,IAAA,CAAA,IAAA,CAAA,KAAA;AAAA,OADA;AAEA,KAJA;AAKA,IAAA,QALA,sBAKA;AAAA;;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,GAAA,GAAA,SAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,QAAA,EACA,IADA,CACA,UAAA,IAAA;AAAA,eAAA,MAAA,CAAA,KAAA,GAAA,IAAA,CAAA,IAAA;AAAA,OADA;AAEA,KARA;AASA,IAAA,SATA,uBASA;AAAA;;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,GAAA,GAAA,QAAA,EACA,IADA,CACA,UAAA,IAAA;AAAA,eAAA,MAAA,CAAA,MAAA,GAAA,IAAA,CAAA,IAAA;AAAA,OADA;AAEA,KAZA;AAaA,IAAA,QAbA,sBAaA;AAAA;;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,KAAA,OAAA,EACA,IADA,CACA,UAAA,IAAA;AAAA,eAAA,MAAA,CAAA,KAAA,GAAA,IAAA,CAAA,IAAA;AAAA,OADA;AAEA;AAhBA,GAxBA;AA0CA,EAAA,OA1CA,qBA0CA;AACA,SAAA,QAAA;AACA,SAAA,SAAA;AACA,SAAA,QAAA;AACA,SAAA,QAAA;AACA;AA/CA,CAAA","sourcesContent":["<template>\n   <div>\n    <v-row>\n      <v-col cols=\"1\">\n        <wm-sidebar></wm-sidebar>\n      </v-col>\n      <v-col cols=\"11\">\n        <v-row>\n          <v-col cols=\"2\">\n            <wm-workum></wm-workum>\n          </v-col>\n          <v-col cols=\"6\">\n            <wm-header :name=\"group.name\"></wm-header>\n          </v-col>\n          <v-col cols=\"3\">\n            <wm-signout></wm-signout>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col cols=\"2\" class=\"secondary\">\n            <wm-groupform @newGroup=\"getGroups\"></wm-groupform>\n            <wm-groups :groups=\"groups\" ></wm-groups>\n          </v-col>\n          <v-col cols=\"6\">\n            <wm-postform :api=\"postApi\" @newPost=\"getPosts\"></wm-postform>\n            <v-divider class=\"mb-2\"></v-divider> \n            <wm-posts :posts=\"posts\"></wm-posts>\n          </v-col>\n          <v-col cols=\"3\" class=\"secondary\">\n            <wm-taskform @newTask=\"getTasks\" :taskApi=\"taskApi\"></wm-taskform>\n            <wm-tasks :tasks=\"tasks\"></wm-tasks>\n          </v-col>\n        </v-row>\n      </v-col>\n    </v-row>\n    <wm-footer></wm-footer>\n  </div>\n</template>\n\n<script>\nimport Posts from '../components/Posts'\nimport PostForm from '../components/PostForm'\nimport Workum from '../components/Workum'\nimport Header from '../components/Header'\nimport Signout from '../components/Signout'\nimport Tasks from '../components/Tasks'\nimport TasksForm from '../components/TasksForm'\nimport GroupForm from '../components/GroupForm'\nimport Groups from '../components/Groups'\nimport { API } from '../../config/config';\nimport axios from 'axios';\nimport Footer from '../components/Footer'\nimport SideBar from '../components/SideBar'\n\nexport default {\n  components: {\n    'wm-posts': Posts,\n    'wm-postform': PostForm,\n    'wm-workum': Workum,\n    'wm-header': Header,\n    'wm-signout': Signout,\n    'wm-tasks': Tasks,\n    'wm-taskform': TasksForm,\n    'wm-groupform': GroupForm,\n    'wm-groups': Groups,\n    'wm-footer': Footer,\n    'wm-sidebar': SideBar\n  },\n  data() {\n    return {\n      group: {name: null},\n      posts: null,\n      groups: null,\n      tasks: null,\n      postApi: API + 'groups/' + this.$route.params.group_id + '/posts',\n      taskApi: API + 'groups/' + this.$route.params.group_id + '/tasks'\n    }\n  },\n  methods: {\n    getPosts() {\n         axios.get(this.postApi)\n        .then(data => this.posts = data.data.posts);\n    },\n    getGroup() {\n         axios.get(API +'groups/' + this.$route.params.group_id)\n        .then(data => this.group = data.data);\n    },\n    getGroups() {\n         axios.get(API + 'groups')\n          .then(data => this.groups = data.data);\n    },\n    getTasks() {\n         axios.get(this.taskApi)\n          .then(data => this.tasks = data.data);\n    }\n  },\n  mounted() {\n    this.getGroup();\n    this.getGroups();\n    this.getPosts();\n    this.getTasks();\n  }\n\n}\n</script>"],"sourceRoot":"src/views"}]}