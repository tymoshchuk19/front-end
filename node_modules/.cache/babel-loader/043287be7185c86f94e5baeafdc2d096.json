{"remainingRequest":"/home/canel/Code/front-end/pri-git/node_modules/babel-loader/lib/index.js!/home/canel/Code/front-end/pri-git/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/canel/Code/front-end/pri-git/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/canel/Code/front-end/pri-git/src/components/PostForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/canel/Code/front-end/pri-git/src/components/PostForm.vue","mtime":1580164143714},{"path":"/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgdmFsaWRhdGlvbk1peGluIH0gZnJvbSAndnVlbGlkYXRlJzsKaW1wb3J0IHsgcmVxdWlyZWQgfSBmcm9tICd2dWVsaWRhdGUvbGliL3ZhbGlkYXRvcnMnOwppbXBvcnQgeyBVU0VSIH0gZnJvbSAnLi4vLi4vY29uZmlnL2NvbmZpZyc7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7Ci8qZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSovCgpleHBvcnQgZGVmYXVsdCB7CiAgbWl4aW5zOiBbdmFsaWRhdGlvbk1peGluXSwKICBwcm9wczogWydhcGknXSwKICB2YWxpZGF0aW9uczogewogICAgdGl0bGU6IHsKICAgICAgcmVxdWlyZWQ6IHJlcXVpcmVkCiAgICB9LAogICAgYm9keTogewogICAgICByZXF1aXJlZDogcmVxdWlyZWQKICAgIH0sCiAgICB0YWc6IHsKICAgICAgcmVxdWlyZWQ6IHJlcXVpcmVkCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGl0bGU6ICcnLAogICAgICBydWxlczogW2Z1bmN0aW9uICh2KSB7CiAgICAgICAgcmV0dXJuICEhdiB8fCAnQ29udGVudCBpcyByZXF1aXJlZC4nOwogICAgICB9XSwKICAgICAgYm9keTogJycsCiAgICAgIHRhZzogJycKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgdGl0bGVFcnJvcnM6IGZ1bmN0aW9uIHRpdGxlRXJyb3JzKCkgewogICAgICB2YXIgZXJyb3JzID0gW107CiAgICAgIGlmICghdGhpcy4kdi50aXRsZS4kZGlydHkpIHJldHVybiBlcnJvcnM7CiAgICAgICF0aGlzLiR2LnRpdGxlLnJlcXVpcmVkICYmIGVycm9ycy5wdXNoKCdUaXRsZSBpcyByZXF1aXJlZC4nKTsKICAgICAgcmV0dXJuIGVycm9yczsKICAgIH0sCiAgICB0YWdFcnJvcnM6IGZ1bmN0aW9uIHRhZ0Vycm9ycygpIHsKICAgICAgdmFyIGVycm9ycyA9IFtdOwogICAgICBpZiAoIXRoaXMuJHYudGFnLiRkaXJ0eSkgcmV0dXJuIGVycm9yczsKICAgICAgcmV0dXJuIGVycm9yczsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHN1Ym1pdDogZnVuY3Rpb24gc3VibWl0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgYXhpb3MucG9zdCh0aGlzLmFwaSwgewogICAgICAgIHBvc3RlZF9ieTogVVNFUiwKICAgICAgICB0aXRsZTogdGhpcy50aXRsZSwKICAgICAgICBib2R5OiB0aGlzLmJvZHksCiAgICAgICAgdGFnczogW3RoaXMudGFnXQogICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy4kZW1pdCgnbmV3UG9zdCcpOwoKICAgICAgICBfdGhpcy5jbGVhcigpOwogICAgICB9KTsKICAgIH0sCiAgICBjbGVhcjogZnVuY3Rpb24gY2xlYXIoKSB7CiAgICAgIHRoaXMuJHYuJHJlc2V0KCk7CiAgICAgIHRoaXMudGl0bGUgPSAnJzsKICAgICAgdGhpcy5ib2R5ID0gJyc7CiAgICAgIHRoaXMudGFnID0gJyc7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["PostForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,SAAA,eAAA,QAAA,WAAA;AACA,SAAA,QAAA,QAAA,0BAAA;AACA,SAAA,IAAA,QAAA,qBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA;;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,eAAA,CADA;AAEA,EAAA,KAAA,EAAA,CAAA,KAAA,CAFA;AAGA,EAAA,WAAA,EAAA;AACA,IAAA,KAAA,EAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KADA;AAEA,IAAA,IAAA,EAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KAFA;AAGA,IAAA,GAAA,EAAA;AAAA,MAAA,QAAA,EAAA;AAAA;AAHA,GAHA;AASA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,CAAA,IAAA,sBAAA;AAAA,OAAA,CAFA;AAGA,MAAA,IAAA,EAAA,EAHA;AAIA,MAAA,GAAA,EAAA;AAJA,KAAA;AAAA,GATA;AAgBA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,UAAA,MAAA,GAAA,EAAA;AACA,UAAA,CAAA,KAAA,EAAA,CAAA,KAAA,CAAA,MAAA,EAAA,OAAA,MAAA;AACA,OAAA,KAAA,EAAA,CAAA,KAAA,CAAA,QAAA,IAAA,MAAA,CAAA,IAAA,CAAA,oBAAA,CAAA;AACA,aAAA,MAAA;AACA,KANA;AAOA,IAAA,SAPA,uBAOA;AACA,UAAA,MAAA,GAAA,EAAA;AACA,UAAA,CAAA,KAAA,EAAA,CAAA,GAAA,CAAA,MAAA,EAAA,OAAA,MAAA;AACA,aAAA,MAAA;AACA;AAXA,GAhBA;AA8BA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;;AACA,MAAA,KAAA,CAAA,IAAA,CAAA,KAAA,GAAA,EAAA;AACA,QAAA,SAAA,EAAA,IADA;AAEA,QAAA,KAAA,EAAA,KAAA,KAFA;AAGA,QAAA,IAAA,EAAA,KAAA,IAHA;AAIA,QAAA,IAAA,EAAA,CAAA,KAAA,GAAA;AAJA,OAAA,EAMA,IANA,CAMA,YAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,SAAA;;AACA,QAAA,KAAA,CAAA,KAAA;AACA,OATA;AAUA,KAZA;AAaA,IAAA,KAbA,mBAaA;AACA,WAAA,EAAA,CAAA,MAAA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,WAAA,IAAA,GAAA,EAAA;AACA,WAAA,GAAA,GAAA,EAAA;AACA;AAlBA;AA9BA,CAAA","sourcesContent":["<template>\n  <v-card class=\"pr-2 pl-2 pb-2 mb-4\">\n    <form>\n      <v-text-field\n        v-model=\"title\"\n        :error-messages=\"titleErrors\"\n        label=\"Title\"\n        required\n        @input=\"$v.title.$touch()\"\n        @blur=\"$v.title.$touch()\"\n      ></v-text-field>\n      <v-textarea\n        counter\n        outlined\n        v-model=\"body\"\n        label=\"Content\"\n        :rules=\"rules\"\n      ></v-textarea>\n      <v-text-field\n        v-model=\"tag\"\n        :error-messages=\"tagErrors\"\n        label=\"Tag\"\n        @input=\"$v.tag.$touch()\"\n        @blur=\"$v.tag.$touch()\"\n      ></v-text-field>\n\n      <v-btn class=\"mr-4\" @click=\"submit\">submit</v-btn>\n      <v-btn @click=\"clear\">clear</v-btn>\n    </form>\n  </v-card>\n</template>\n\n\n<script>\n  import { validationMixin } from 'vuelidate';\n  import { required } from 'vuelidate/lib/validators';\n  import { USER } from '../../config/config';\n  import axios from \"axios\";\n\n  /*eslint-disable no-console*/\n\n  export default {\n    mixins: [validationMixin],\n    props: ['api'],\n    validations: {\n      title: { required },\n      body: { required },\n      tag: { required }\n    },\n\n    data: () => ({\n      title: '',\n      rules: [v => !!v || 'Content is required.'],\n      body: '',\n      tag: '',\n    }),\n\n    computed: {\n      titleErrors () {\n        const errors = []\n        if (!this.$v.title.$dirty) return errors\n        !this.$v.title.required && errors.push('Title is required.')\n        return errors\n      },\n      tagErrors () {\n        const errors = []\n        if (!this.$v.tag.$dirty) return errors\n        return errors\n      }\n    },\n\n    methods: {\n      submit () {\n        axios.post(this.api , {\n          posted_by: USER,\n          title: this.title,\n          body: this.body,\n          tags: [this.tag]\n        })\n        .then(() => { \n          this.$emit('newPost'); \n          this.clear()\n        });\n      },\n      clear () {\n        this.$v.$reset()\n        this.title = ''\n        this.body = ''\n        this.tag = ''\n      },\n    }\n  }\n</script>"],"sourceRoot":"src/components"}]}