{"remainingRequest":"/home/canel/Code/PRI/front-end/node_modules/babel-loader/lib/index.js!/home/canel/Code/PRI/front-end/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/home/canel/Code/PRI/front-end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/canel/Code/PRI/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/canel/Code/PRI/front-end/src/components/PostForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/canel/Code/PRI/front-end/src/components/PostForm.vue","mtime":1580417697896},{"path":"/home/canel/Code/PRI/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1580417697002},{"path":"/home/canel/Code/PRI/front-end/node_modules/babel-loader/lib/index.js","mtime":1580417696982},{"path":"/home/canel/Code/PRI/front-end/node_modules/vuetify-loader/lib/loader.js","mtime":1580417697716},{"path":"/home/canel/Code/PRI/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1580417697002},{"path":"/home/canel/Code/PRI/front-end/node_modules/vue-loader/lib/index.js","mtime":1580417697686}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgdmFsaWRhdGlvbk1peGluIH0gZnJvbSAidnVlbGlkYXRlIjsKaW1wb3J0IHsgcmVxdWlyZWQgfSBmcm9tICJ2dWVsaWRhdGUvbGliL3ZhbGlkYXRvcnMiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwovKmVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUqLwoKZXhwb3J0IGRlZmF1bHQgewogIG1peGluczogW3ZhbGlkYXRpb25NaXhpbl0sCiAgcHJvcHM6IFsiYXBpIl0sCiAgdmFsaWRhdGlvbnM6IHsKICAgIHRpdGxlOiB7CiAgICAgIHJlcXVpcmVkOiByZXF1aXJlZAogICAgfSwKICAgIGJvZHk6IHsKICAgICAgcmVxdWlyZWQ6IHJlcXVpcmVkCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGlhbG9nOiBmYWxzZSwKICAgICAgdGl0bGU6ICcnLAogICAgICBydWxlczogW2Z1bmN0aW9uICh2KSB7CiAgICAgICAgcmV0dXJuICEhdiB8fCAnQ29udGVudCBpcyByZXF1aXJlZC4nOwogICAgICB9XSwKICAgICAgYm9keTogJycsCiAgICAgIHRhZ3M6ICcnCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHRpdGxlRXJyb3JzOiBmdW5jdGlvbiB0aXRsZUVycm9ycygpIHsKICAgICAgdmFyIGVycm9ycyA9IFtdOwogICAgICBpZiAoIXRoaXMuJHYudGl0bGUuJGRpcnR5KSByZXR1cm4gZXJyb3JzOwogICAgICAhdGhpcy4kdi50aXRsZS5yZXF1aXJlZCAmJiBlcnJvcnMucHVzaCgiVGl0bGUgaXMgcmVxdWlyZWQuIik7CiAgICAgIHJldHVybiBlcnJvcnM7CiAgICB9LAogICAgdGFnRXJyb3JzOiBmdW5jdGlvbiB0YWdFcnJvcnMoKSB7CiAgICAgIHZhciBlcnJvcnMgPSBbXTsKICAgICAgaWYgKCF0aGlzLiR2LnRhZy4kZGlydHkpIHJldHVybiBlcnJvcnM7CiAgICAgIHJldHVybiBlcnJvcnM7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBzdWJtaXQ6IGZ1bmN0aW9uIHN1Ym1pdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGF4aW9zLnBvc3QodGhpcy5hcGksIHsKICAgICAgICB0aXRsZTogdGhpcy50aXRsZSwKICAgICAgICBib2R5OiB0aGlzLmJvZHksCiAgICAgICAgdGFnczogdGhpcy50YWdzID8gdGhpcy50YWdzIDogW10KICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMuZGlhbG9nID0gZmFsc2U7CgogICAgICAgIF90aGlzLiRlbWl0KCduZXdQb3N0Jyk7CgogICAgICAgIF90aGlzLmNsZWFyKCk7CiAgICAgIH0pOwogICAgfSwKICAgIGNsZWFyOiBmdW5jdGlvbiBjbGVhcigpIHsKICAgICAgdGhpcy4kdi4kcmVzZXQoKTsKICAgICAgdGhpcy50aXRsZSA9ICIiOwogICAgICB0aGlzLmJvZHkgPSAiIjsKICAgICAgdGhpcy50YWdzID0gIiI7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["PostForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,SAAA,eAAA,QAAA,WAAA;AACA,SAAA,QAAA,QAAA,0BAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA;;AAEA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,eAAA,CADA;AAEA,EAAA,KAAA,EAAA,CAAA,KAAA,CAFA;AAGA,EAAA,WAAA,EAAA;AACA,IAAA,KAAA,EAAA;AAAA,MAAA,QAAA,EAAA;AAAA,KADA;AAEA,IAAA,IAAA,EAAA;AAAA,MAAA,QAAA,EAAA;AAAA;AAFA,GAHA;AAQA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,MAAA,EAAA,KADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,CAAA,IAAA,sBAAA;AAAA,OAAA,CAHA;AAIA,MAAA,IAAA,EAAA,EAJA;AAKA,MAAA,IAAA,EAAA;AALA,KAAA;AAAA,GARA;AAgBA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,UAAA,MAAA,GAAA,EAAA;AACA,UAAA,CAAA,KAAA,EAAA,CAAA,KAAA,CAAA,MAAA,EAAA,OAAA,MAAA;AACA,OAAA,KAAA,EAAA,CAAA,KAAA,CAAA,QAAA,IAAA,MAAA,CAAA,IAAA,CAAA,oBAAA,CAAA;AACA,aAAA,MAAA;AACA,KANA;AAOA,IAAA,SAPA,uBAOA;AACA,UAAA,MAAA,GAAA,EAAA;AACA,UAAA,CAAA,KAAA,EAAA,CAAA,GAAA,CAAA,MAAA,EAAA,OAAA,MAAA;AACA,aAAA,MAAA;AACA;AAXA,GAhBA;AA8BA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;;AACA,MAAA,KAAA,CACA,IADA,CACA,KAAA,GADA,EACA;AACA,QAAA,KAAA,EAAA,KAAA,KADA;AAEA,QAAA,IAAA,EAAA,KAAA,IAFA;AAGA,QAAA,IAAA,EAAA,KAAA,IAAA,GAAA,KAAA,IAAA,GAAA;AAHA,OADA,EAMA,IANA,CAMA,YAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,KAAA;;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,SAAA;;AACA,QAAA,KAAA,CAAA,KAAA;AACA,OAVA;AAWA,KAbA;AAcA,IAAA,KAdA,mBAcA;AACA,WAAA,EAAA,CAAA,MAAA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,WAAA,IAAA,GAAA,EAAA;AACA,WAAA,IAAA,GAAA,EAAA;AACA;AAnBA;AA9BA,CAAA","sourcesContent":["<template>\n  <v-row justify=\"center\">\n    <v-dialog v-model=\"dialog\" persistent max-width=\"290\">\n      <template v-slot:activator=\"{ on }\">\n        <v-btn block tile color=\"primary\" dark v-on=\"on\">\n          New Post\n        </v-btn>\n      </template>\n      <v-card class=\"pr-2 pl-2 pb-2 mb-4\">\n        <form>\n          <v-text-field\n            v-model=\"title\"\n            :error-messages=\"titleErrors\"\n            label=\"Title\"\n            required\n            @input=\"$v.title.$touch()\"\n            @blur=\"$v.title.$touch()\"\n          ></v-text-field>\n          <v-textarea\n            counter\n            outlined\n            v-model=\"body\"\n            label=\"Content\"\n            :rules=\"rules\"\n          ></v-textarea>\n          <v-combobox\n                multiple\n                solo\n                clearable\n                v-model=\"tags\"\n                chips\n                deletable-chips\n                label=\"Tags\"\n            >\n          </v-combobox>\n\n          <v-btn class=\"primary mr-4\" text rounded @click=\"submit\">Submit</v-btn>\n          <v-btn color=\"primary darken-1\" text @click=\"dialog = false\">Close</v-btn>\n        </form>\n      </v-card>\n    </v-dialog>\n  </v-row>\n</template>\n\n\n<script>\nimport { validationMixin } from \"vuelidate\";\nimport { required } from \"vuelidate/lib/validators\";\nimport axios from \"axios\";\n\n/*eslint-disable no-console*/\n\nexport default {\n  mixins: [validationMixin],\n  props: [\"api\"],\n  validations: {\n    title: { required },\n    body: { required }\n  },\n\n    data: () => ({\n      dialog: false,\n      title: '',\n      rules: [v => !!v || 'Content is required.'],\n      body: '',\n      tags: '',\n    }),\n\n  computed: {\n    titleErrors() {\n      const errors = [];\n      if (!this.$v.title.$dirty) return errors;\n      !this.$v.title.required && errors.push(\"Title is required.\");\n      return errors;\n    },\n    tagErrors() {\n      const errors = [];\n      if (!this.$v.tag.$dirty) return errors;\n      return errors;\n    }\n  },\n\n  methods: {\n    submit() {\n      axios\n        .post(this.api, {\n          title: this.title,\n          body: this.body,\n          tags: this.tags ? this.tags : []\n        })\n        .then(() => { \n          this.dialog = false;\n          this.$emit('newPost'); \n          this.clear()\n        });\n    },\n    clear() {\n      this.$v.$reset();\n      this.title = \"\";\n      this.body = \"\";\n      this.tags = \"\";\n    }\n  }\n};\n</script>"],"sourceRoot":"src/components"}]}