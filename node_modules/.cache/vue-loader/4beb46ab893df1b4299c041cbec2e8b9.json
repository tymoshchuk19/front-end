{"remainingRequest":"/home/canel/Code/front-end/pri-git/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/canel/Code/front-end/pri-git/src/views/ProfilePage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/canel/Code/front-end/pri-git/src/views/ProfilePage.vue","mtime":1580404263781},{"path":"/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSovCmltcG9ydCBQb3N0cyBmcm9tICIuLi9jb21wb25lbnRzL1Bvc3RzIjsKaW1wb3J0IFdvcmt1bSBmcm9tICIuLi9jb21wb25lbnRzL1dvcmt1bSI7CmltcG9ydCBUYXNrcyBmcm9tICIuLi9jb21wb25lbnRzL1Rhc2tzIjsKaW1wb3J0IEhlYWRlciBmcm9tICIuLi9jb21wb25lbnRzL0hlYWRlciI7CmltcG9ydCBHcm91cHMgZnJvbSAiLi4vY29tcG9uZW50cy9Hcm91cHMiOwppbXBvcnQgU2lnbm91dCBmcm9tICIuLi9jb21wb25lbnRzL1NpZ25vdXQiOwovL2ltcG9ydCBGb290ZXIgZnJvbSAiLi4vY29tcG9uZW50cy9Gb290ZXIiOwppbXBvcnQgRnJpZW5kc0xpc3QgZnJvbSAiLi4vY29tcG9uZW50cy9GcmllbmRzTGlzdCI7CmltcG9ydCB7IEFQSSB9IGZyb20gIi4uLy4uL2NvbmZpZy9jb25maWciOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gInZ1ZXgiOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgICJ3bS1wb3N0cyI6IFBvc3RzLAogICAgIndtLXdvcmt1bSI6IFdvcmt1bSwKICAgICJ3bS10YXNrcyI6IFRhc2tzLAogICAgIndtLWhlYWRlciI6IEhlYWRlciwKICAgICJ3bS1ncm91cHMiOiBHcm91cHMsCiAgICAid20tc2lnbm91dCI6IFNpZ25vdXQsCiAgICAvLyJ3bS1mb290ZXIiOiBGb290ZXIsCiAgICAid20tZnJpZW5kc2xpc3QiOiBGcmllbmRzTGlzdAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZXJwcm9maWxlOiBudWxsLAogICAgICBwb3N0czogbnVsbCwKICAgICAgZ3JvdXBzOiBudWxsLAogICAgICB0YXNrczogbnVsbCwKICAgICAgcG9zdEFwaTogQVBJICsgInBvc3RzIgogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFVzZXJQcm9maWxlKCkgewogICAgICBheGlvcy5nZXQoQVBJICsgInVzZXJzLyIgKyB0aGlzLiRyb3V0ZS5wYXJhbXMudXNlcl9pZCApLnRoZW4oZGF0YSA9PiB0aGlzLnVzZXJwcm9maWxlID0gZGF0YS5kYXRhKTsKICAgIH0sCiAgICBnZXRQb3N0cygpIHsKICAgICAgYXhpb3MuZ2V0KEFQSSArICJmZWVkIikudGhlbihkYXRhID0+ICh0aGlzLnBvc3RzID0gZGF0YS5kYXRhKSk7CiAgICB9LAogICAgZ2V0R3JvdXBzKCkgewogICAgICBheGlvcy5nZXQoQVBJICsgIm15L2dyb3VwcyIpLnRoZW4oZGF0YSA9PiAodGhpcy5ncm91cHMgPSBkYXRhLmRhdGEpKTsKICAgIH0sCiAgICBnZXRUYXNrcygpIHsKICAgICAgYXhpb3MKICAgICAgICAuZ2V0KEFQSSArICJ1c2Vycy8iICsgdGhpcy51c2VyLl9pZCArICIvdGFza3MiKQogICAgICAgIC50aGVuKGRhdGEgPT4gKHRoaXMudGFza3MgPSBkYXRhLmRhdGEpKTsKICAgIH0sCiAgICBhZGRGcmllbmQoKSB7CiAgICAgIGF4aW9zCiAgICAgICAgLnBvc3QoQVBJICsgInVzZXJzLyIgKyB0aGlzLnVzZXJwcm9maWxlLl9pZCArICIvcmVxdWVzdCIsewogICAgICAgICAgICAKICAgICAgICB9KQogICAgICAgIC50aGVuKCgpID0+IGNvbnNvbGUubG9nKCdyZXF1ZXN0IHNlbmRlZCcpKTsKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldFVzZXJQcm9maWxlKCk7CiAgICB0aGlzLmdldFBvc3RzKCk7CiAgICB0aGlzLmdldEdyb3VwcygpOwogICAgdGhpcy5nZXRUYXNrcygpOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcFN0YXRlKFsidXNlciJdKQogIH0KfTsK"},{"version":3,"sources":["ProfilePage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ProfilePage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <v-app-bar app color=\"indigo darken-2\" dark dense>\n      <div class=\"d-flex align-center\">\n        <v-toolbar-title>WorkuM</v-toolbar-title>\n      </div>\n      <v-spacer></v-spacer>\n    </v-app-bar>\n    <v-row>\n      <v-col cols=\"3\">\n        <wm-workum></wm-workum>\n      </v-col>\n      <v-col cols=\"6\">\n        <wm-header :name=\"userprofile.nome\"></wm-header>\n      </v-col>\n      <v-col cols=\"3\">\n        <wm-signout></wm-signout>\n        <v-btn text @click=\"addFriend\">Add friend</v-btn>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col cols=\"3\" class=\"secondary\">\n        <wm-groups :groups=\"groups\"></wm-groups>\n      </v-col>\n      <v-col cols=\"6\" class=\"secondary\">\n        <wm-posts :posts=\"posts\"></wm-posts>\n      </v-col>\n      <v-col cols=\"3\" class=\"secondary\">\n        <wm-tasks :tasks=\"tasks\"></wm-tasks>\n        <br/>\n        <wm-friendslist></wm-friendslist>\n      </v-col>\n    </v-row>\n    <!-- <wm-footer></wm-footer> -->\n  </div>\n</template>\n\n<script>\n/*eslint-disable no-console*/\nimport Posts from \"../components/Posts\";\nimport Workum from \"../components/Workum\";\nimport Tasks from \"../components/Tasks\";\nimport Header from \"../components/Header\";\nimport Groups from \"../components/Groups\";\nimport Signout from \"../components/Signout\";\n//import Footer from \"../components/Footer\";\nimport FriendsList from \"../components/FriendsList\";\nimport { API } from \"../../config/config\";\nimport axios from \"axios\";\nimport { mapState } from \"vuex\";\n\nexport default {\n  components: {\n    \"wm-posts\": Posts,\n    \"wm-workum\": Workum,\n    \"wm-tasks\": Tasks,\n    \"wm-header\": Header,\n    \"wm-groups\": Groups,\n    \"wm-signout\": Signout,\n    //\"wm-footer\": Footer,\n    \"wm-friendslist\": FriendsList\n  },\n  data() {\n    return {\n      userprofile: null,\n      posts: null,\n      groups: null,\n      tasks: null,\n      postApi: API + \"posts\"\n    };\n  },\n  methods: {\n    getUserProfile() {\n      axios.get(API + \"users/\" + this.$route.params.user_id ).then(data => this.userprofile = data.data);\n    },\n    getPosts() {\n      axios.get(API + \"feed\").then(data => (this.posts = data.data));\n    },\n    getGroups() {\n      axios.get(API + \"my/groups\").then(data => (this.groups = data.data));\n    },\n    getTasks() {\n      axios\n        .get(API + \"users/\" + this.user._id + \"/tasks\")\n        .then(data => (this.tasks = data.data));\n    },\n    addFriend() {\n      axios\n        .post(API + \"users/\" + this.userprofile._id + \"/request\",{\n            \n        })\n        .then(() => console.log('request sended'));\n    }\n  },\n  mounted() {\n    this.getUserProfile();\n    this.getPosts();\n    this.getGroups();\n    this.getTasks();\n  },\n  computed: {\n    ...mapState([\"user\"])\n  }\n};\n</script>\n"]}]}