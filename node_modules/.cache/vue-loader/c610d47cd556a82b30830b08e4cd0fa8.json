{"remainingRequest":"/workspace/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspace/front-end/src/views/ProfilePage.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/workspace/front-end/src/views/ProfilePage.vue","mtime":1580453008981},{"path":"/workspace/front-end/node_modules/css-loader/dist/cjs.js","mtime":1580239220004},{"path":"/workspace/front-end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1580239220548},{"path":"/workspace/front-end/node_modules/postcss-loader/src/index.js","mtime":1580239220271},{"path":"/workspace/front-end/node_modules/vuetify-loader/lib/loader.js","mtime":1580239220578},{"path":"/workspace/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1580239219881},{"path":"/workspace/front-end/node_modules/vue-loader/lib/index.js","mtime":1580239220548}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpodG1sIGJvZHkgewogIGhlaWdodDogMTAwdmggIWltcG9ydGFudDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJlNjhmICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["ProfilePage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA;AACA;AACA;AACA","file":"ProfilePage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"page\">\n    <wm-topbar />\n\n    <v-row>\n      <v-col cols=\"3\">\n        <wm-workum :user=\"userprofile\"></wm-workum>\n        <wm-groups v-if=\"mates\" :groups=\"groups\"></wm-groups>\n      </v-col>\n      <v-col cols=\"6\">\n        <wm-posts v-if=\"mates\" :posts=\"posts\"></wm-posts>\n      </v-col>\n      <v-col cols=\"3\">\n        <wm-tasks v-if=\"mates\" :tasks=\"tasks\"></wm-tasks>\n        <br />\n        <wm-friendslist></wm-friendslist>\n      </v-col>\n    </v-row>\n    <wm-footer></wm-footer>\n  </div>\n</template>\n\n<script>\n/*eslint-disable no-console*/\nimport Posts from \"../components/Posts\";\nimport Workum from \"../components/Workum\";\nimport Tasks from \"../components/Tasks\";\nimport Groups from \"../components/Groups\";\nimport TopBarVue from \"../components/TopBar.vue\";\nimport Footer from \"../components/Footer\";\n\nimport FriendsList from \"../components/FriendsList\";\nimport { API } from \"../../config/config\";\nimport axios from \"axios\";\nimport { mapState } from \"vuex\";\n\nexport default {\n  components: {\n    \"wm-posts\": Posts,\n    \"wm-workum\": Workum,\n    \"wm-tasks\": Tasks,\n    \"wm-groups\": Groups,\n    \"wm-topbar\": TopBarVue,\n\n    \"wm-footer\": Footer,\n    \"wm-friendslist\": FriendsList\n  },\n  watch: {\n    $route() {\n      this.getUserProfile();\n      this.getPosts();\n      this.getGroups();\n      this.getTasks();\n    }\n  },\n  data() {\n    return {\n      mates: false,\n      userprofile: null,\n      posts: null,\n      groups: null,\n      tasks: null,\n      postApi: API + \"posts\"\n    };\n  },\n  methods: {\n    getUserProfile() {\n      axios\n        .get(API + \"users/\" + this.$route.params.user_id)\n        .then(data => (this.userprofile = data.data));\n    },\n    getPosts() {\n      axios\n        .get(API + \"users/\" + this.$route.params.user_id + \"/posts\")\n        .then(data => (this.posts = data.data));\n    },\n    getGroups() {\n      axios.get(API + \"my/groups\").then(data => (this.groups = data.data));\n    },\n    getTasks() {\n      axios\n        .get(API + \"users/\" + this.user._id + \"/tasks\")\n        .then(data => (this.tasks = data.data));\n    },\n    addFriend() {\n      axios\n        .post(API + \"users/\" + this.userprofile._id + \"/request\", {})\n        .then(() => {\n          console.log(\"request sended\");\n        });\n    },\n    removeFriend() {\n      axios\n        .post(API + \"users/\" + this.userprofile._id + \"/remove\", {})\n        .then(() => {\n          console.log(\"request sended\");\n          this.mates = !this.mates;\n        });\n    }\n  },\n  mounted() {\n    this.getUserProfile();\n    this.getPosts();\n    this.getGroups();\n    this.getTasks();\n    this.mates = this.user.friends.find(obj => {\n      return obj._id === this.$route.params.user_id;\n    });\n  },\n  computed: {\n    ...mapState([\"user\"])\n  }\n};\n</script>\n\n<style>\nhtml body {\n  height: 100vh !important;\n  background-color: #f2e68f !important;\n}\n</style>\n"]}]}