{"remainingRequest":"/home/canel/Code/front-end/pri-git/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/canel/Code/front-end/pri-git/src/components/CommentsForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/canel/Code/front-end/pri-git/src/components/CommentsForm.vue","mtime":1580227917913},{"path":"/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHZhbGlkYXRpb25NaXhpbiB9IGZyb20gJ3Z1ZWxpZGF0ZSc7CmltcG9ydCB7IHJlcXVpcmVkIH0gZnJvbSAndnVlbGlkYXRlL2xpYi92YWxpZGF0b3JzJzsKaW1wb3J0IHsgVVNFUiwgQVBJIH0gZnJvbSAnLi4vLi4vY29uZmlnL2NvbmZpZyc7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CgovKmVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUqLwoKZXhwb3J0IGRlZmF1bHQgewogIG1peGluczogW3ZhbGlkYXRpb25NaXhpbl0sCiAgcHJvcHM6IFsncG9zdGlkJ10sCiAgdmFsaWRhdGlvbnM6IHsKICAgIGJvZHk6IHsgcmVxdWlyZWQgfQogIH0sCgogIGRhdGE6ICgpID0+ICh7CiAgICBib2R5OiAnJywKICAgIHJ1bGVzOiBbdiA9PiAhIXYgfHwgJ0NvbW1lbnQgaXMgcmVxdWlyZWQuJ10KICB9KSwKCiAgbWV0aG9kczogewogICAgc3VibWl0ICgpIHsKICAgICAgYXhpb3MucG9zdChBUEkgKyAncG9zdHMvJyArIHRoaXMucG9zdGlkICsgJy9jb21tZW50cycsIHsKICAgICAgICAgIGF1dGhvcjogVVNFUiwKICAgICAgICAgIGJvZHk6IHRoaXMuYm9keQogICAgfSkKICAgICAgLnRoZW4oKCkgPT4geyAKICAgICAgICB0aGlzLiRlbWl0KCduZXdHcm91cCcpOyAKICAgICAgICB0aGlzLmNsZWFyKCkKICAgICAgfSk7CiAgICB9LAogICAgY2xlYXIgKCkgewogICAgICB0aGlzLiR2LiRyZXNldCgpCiAgICAgIHRoaXMuYm9keSA9ICcnCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["CommentsForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CommentsForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-card class=\"pr-2 pl-2 pb-2 ml-5\">\n    <form>\n      <v-textarea\n        counter\n        outlined\n        v-model=\"body\"\n        label=\"Comment\"\n        :rules=\"rules\"\n      ></v-textarea>\n\n      <v-btn class=\"mr-4\" @click=\"submit\">submit</v-btn>\n      <v-btn @click=\"clear\">clear</v-btn>\n    </form>\n  </v-card>\n</template>\n\n\n<script>\n  import { validationMixin } from 'vuelidate';\n  import { required } from 'vuelidate/lib/validators';\n  import { USER, API } from '../../config/config';\n  import axios from \"axios\";\n\n  /*eslint-disable no-console*/\n\n  export default {\n    mixins: [validationMixin],\n    props: ['postid'],\n    validations: {\n      body: { required }\n    },\n\n    data: () => ({\n      body: '',\n      rules: [v => !!v || 'Comment is required.']\n    }),\n\n    methods: {\n      submit () {\n        axios.post(API + 'posts/' + this.postid + '/comments', {\n            author: USER,\n            body: this.body\n      })\n        .then(() => { \n          this.$emit('newGroup'); \n          this.clear()\n        });\n      },\n      clear () {\n        this.$v.$reset()\n        this.body = ''\n      }\n    }\n  }\n</script>"]}]}