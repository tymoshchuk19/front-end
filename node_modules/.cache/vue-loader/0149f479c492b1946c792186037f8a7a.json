{"remainingRequest":"/workspace/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspace/front-end/src/components/PostForm.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/workspace/front-end/src/components/PostForm.vue","mtime":1580440158165},{"path":"/workspace/front-end/node_modules/css-loader/dist/cjs.js","mtime":1580239220004},{"path":"/workspace/front-end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1580239220548},{"path":"/workspace/front-end/node_modules/postcss-loader/src/index.js","mtime":1580239220271},{"path":"/workspace/front-end/node_modules/vuetify-loader/lib/loader.js","mtime":1580239220578},{"path":"/workspace/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1580239219881},{"path":"/workspace/front-end/node_modules/vue-loader/lib/index.js","mtime":1580239220548}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJ1dHRvbi13aWR0aCB7CiAgd2lkdGg6IDk3LjUlOwogIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDEwcHg7CiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDEwcHg7Cn0K"},{"version":3,"sources":["PostForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;AACA;AACA;AACA;AACA","file":"PostForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-row justify=\"center\">\n    <v-dialog v-model=\"dialog\" persistent max-width=\"450\">\n      <template v-slot:activator=\"{ on }\">\n        <v-btn class=\"pa-0 button-width\" color=\"indigo darken-1\" tile dark v-on=\"on\">\n          Create new post\n          <v-icon class=\"ml-2\" size=\"26\" color=\"white\">mdi-plus-circle</v-icon>\n        </v-btn>\n      </template>\n      <v-card class=\"pr-2 pl-2 pb-2 mb-4\">\n        <form>\n          <v-text-field\n            v-model=\"title\"\n            :error-messages=\"titleErrors\"\n            label=\"Title\"\n            required\n            @input=\"$v.title.$touch()\"\n            @blur=\"$v.title.$touch()\"\n          ></v-text-field>\n          <v-textarea counter outlined v-model=\"body\" label=\"Content\" :rules=\"rules\"></v-textarea>\n          <v-combobox multiple solo clearable v-model=\"tags\" chips deletable-chips label=\"Tags\"></v-combobox>\n\n          <v-btn class=\"primary mr-4\" text rounded @click=\"submit\">Submit</v-btn>\n          <v-btn color=\"primary darken-1\" text @click=\"dialog = false\">Close</v-btn>\n        </form>\n      </v-card>\n    </v-dialog>\n  </v-row>\n</template>\n\n\n<script>\nimport { validationMixin } from \"vuelidate\";\nimport { required } from \"vuelidate/lib/validators\";\nimport axios from \"axios\";\n\n/*eslint-disable no-console*/\n\nexport default {\n  mixins: [validationMixin],\n  props: [\"api\"],\n  validations: {\n    title: { required },\n    body: { required }\n  },\n\n  data: () => ({\n    dialog: false,\n    title: \"\",\n    rules: [v => !!v || \"Content is required.\"],\n    body: \"\",\n    tags: \"\"\n  }),\n\n  computed: {\n    titleErrors() {\n      const errors = [];\n      if (!this.$v.title.$dirty) return errors;\n      !this.$v.title.required && errors.push(\"Title is required.\");\n      return errors;\n    },\n    tagErrors() {\n      const errors = [];\n      if (!this.$v.tag.$dirty) return errors;\n      return errors;\n    }\n  },\n\n  methods: {\n    submit() {\n      axios\n        .post(this.api, {\n          title: this.title,\n          body: this.body,\n          tags: this.tags ? this.tags : []\n        })\n        .then(() => {\n          this.dialog = false;\n          this.$emit(\"newPost\");\n          this.clear();\n        });\n    },\n    clear() {\n      this.$v.$reset();\n      this.title = \"\";\n      this.body = \"\";\n      this.tags = \"\";\n    }\n  }\n};\n</script>\n\n<style>\n.button-width {\n  width: 97.5%;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n}\n</style>"]}]}