{"remainingRequest":"/home/canel/Code/front-end/pri-git/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/canel/Code/front-end/pri-git/src/views/GroupPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/canel/Code/front-end/pri-git/src/views/GroupPage.vue","mtime":1580323658843},{"path":"/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQb3N0cyBmcm9tICcuLi9jb21wb25lbnRzL1Bvc3RzJwppbXBvcnQgUG9zdEZvcm0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3N0Rm9ybScKaW1wb3J0IFdvcmt1bSBmcm9tICcuLi9jb21wb25lbnRzL1dvcmt1bScKaW1wb3J0IEhlYWRlciBmcm9tICcuLi9jb21wb25lbnRzL0hlYWRlcicKaW1wb3J0IFNpZ25vdXQgZnJvbSAnLi4vY29tcG9uZW50cy9TaWdub3V0JwppbXBvcnQgVGFza3MgZnJvbSAnLi4vY29tcG9uZW50cy9UYXNrcycKaW1wb3J0IFRhc2tzRm9ybSBmcm9tICcuLi9jb21wb25lbnRzL1Rhc2tzRm9ybScKaW1wb3J0IEdyb3VwRm9ybSBmcm9tICcuLi9jb21wb25lbnRzL0dyb3VwRm9ybScKaW1wb3J0IEdyb3VwcyBmcm9tICcuLi9jb21wb25lbnRzL0dyb3VwcycKaW1wb3J0IHsgQVBJIH0gZnJvbSAnLi4vLi4vY29uZmlnL2NvbmZpZyc7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBGb290ZXIgZnJvbSAnLi4vY29tcG9uZW50cy9Gb290ZXInCmltcG9ydCBTaWRlQmFyIGZyb20gJy4uL2NvbXBvbmVudHMvU2lkZUJhcicKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICAnd20tcG9zdHMnOiBQb3N0cywKICAgICd3bS1wb3N0Zm9ybSc6IFBvc3RGb3JtLAogICAgJ3dtLXdvcmt1bSc6IFdvcmt1bSwKICAgICd3bS1oZWFkZXInOiBIZWFkZXIsCiAgICAnd20tc2lnbm91dCc6IFNpZ25vdXQsCiAgICAnd20tdGFza3MnOiBUYXNrcywKICAgICd3bS10YXNrZm9ybSc6IFRhc2tzRm9ybSwKICAgICd3bS1ncm91cGZvcm0nOiBHcm91cEZvcm0sCiAgICAnd20tZ3JvdXBzJzogR3JvdXBzLAogICAgJ3dtLWZvb3Rlcic6IEZvb3RlciwKICAgICd3bS1zaWRlYmFyJzogU2lkZUJhcgogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGdyb3VwOiB7bmFtZTogbnVsbH0sCiAgICAgIHBvc3RzOiBudWxsLAogICAgICBncm91cHM6IG51bGwsCiAgICAgIHRhc2tzOiBudWxsLAogICAgICBwb3N0QXBpOiBBUEkgKyAnZ3JvdXBzLycgKyB0aGlzLiRyb3V0ZS5wYXJhbXMuZ3JvdXBfaWQgKyAnL3Bvc3RzJywKICAgICAgdGFza0FwaTogQVBJICsgJ2dyb3Vwcy8nICsgdGhpcy4kcm91dGUucGFyYW1zLmdyb3VwX2lkICsgJy90YXNrcycKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFBvc3RzKCkgewogICAgICAgICBheGlvcy5nZXQodGhpcy5wb3N0QXBpKQogICAgICAgIC50aGVuKGRhdGEgPT4gdGhpcy5wb3N0cyA9IGRhdGEuZGF0YS5wb3N0cyk7CiAgICB9LAogICAgZ2V0R3JvdXAoKSB7CiAgICAgICAgIGF4aW9zLmdldChBUEkgKydncm91cHMvJyArIHRoaXMuJHJvdXRlLnBhcmFtcy5ncm91cF9pZCkKICAgICAgICAudGhlbihkYXRhID0+IHRoaXMuZ3JvdXAgPSBkYXRhLmRhdGEpOwogICAgfSwKICAgIGdldEdyb3VwcygpIHsKICAgICAgICAgYXhpb3MuZ2V0KEFQSSArICdncm91cHMnKQogICAgICAgICAgLnRoZW4oZGF0YSA9PiB0aGlzLmdyb3VwcyA9IGRhdGEuZGF0YSk7CiAgICB9LAogICAgZ2V0VGFza3MoKSB7CiAgICAgICAgIGF4aW9zLmdldCh0aGlzLnRhc2tBcGkpCiAgICAgICAgICAudGhlbihkYXRhID0+IHRoaXMudGFza3MgPSBkYXRhLmRhdGEpOwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0R3JvdXAoKTsKICAgIHRoaXMuZ2V0R3JvdXBzKCk7CiAgICB0aGlzLmdldFBvc3RzKCk7CiAgICB0aGlzLmdldFRhc2tzKCk7CiAgfQoKfQo="},{"version":3,"sources":["GroupPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"GroupPage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n   <div>\n    <v-row>\n      <v-col cols=\"1\">\n        <wm-sidebar></wm-sidebar>\n      </v-col>\n      <v-col cols=\"11\">\n        <v-row>\n          <v-col cols=\"2\">\n            <wm-workum></wm-workum>\n          </v-col>\n          <v-col cols=\"6\">\n            <wm-header :name=\"group.name\"></wm-header>\n          </v-col>\n          <v-col cols=\"3\">\n            <wm-signout></wm-signout>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col cols=\"2\" class=\"secondary\">\n            <wm-groupform @newGroup=\"getGroups\"></wm-groupform>\n            <wm-groups :groups=\"groups\" ></wm-groups>\n          </v-col>\n          <v-col cols=\"6\">\n            <wm-postform :api=\"postApi\" @newPost=\"getPosts\"></wm-postform>\n            <v-divider class=\"mb-2\"></v-divider> \n            <wm-posts :posts=\"posts\"></wm-posts>\n          </v-col>\n          <v-col cols=\"3\" class=\"secondary\">\n            <wm-taskform @newTask=\"getTasks\" :taskApi=\"taskApi\"></wm-taskform>\n            <wm-tasks :tasks=\"tasks\"></wm-tasks>\n          </v-col>\n        </v-row>\n      </v-col>\n    </v-row>\n    <wm-footer></wm-footer>\n  </div>\n</template>\n\n<script>\nimport Posts from '../components/Posts'\nimport PostForm from '../components/PostForm'\nimport Workum from '../components/Workum'\nimport Header from '../components/Header'\nimport Signout from '../components/Signout'\nimport Tasks from '../components/Tasks'\nimport TasksForm from '../components/TasksForm'\nimport GroupForm from '../components/GroupForm'\nimport Groups from '../components/Groups'\nimport { API } from '../../config/config';\nimport axios from 'axios';\nimport Footer from '../components/Footer'\nimport SideBar from '../components/SideBar'\n\nexport default {\n  components: {\n    'wm-posts': Posts,\n    'wm-postform': PostForm,\n    'wm-workum': Workum,\n    'wm-header': Header,\n    'wm-signout': Signout,\n    'wm-tasks': Tasks,\n    'wm-taskform': TasksForm,\n    'wm-groupform': GroupForm,\n    'wm-groups': Groups,\n    'wm-footer': Footer,\n    'wm-sidebar': SideBar\n  },\n  data() {\n    return {\n      group: {name: null},\n      posts: null,\n      groups: null,\n      tasks: null,\n      postApi: API + 'groups/' + this.$route.params.group_id + '/posts',\n      taskApi: API + 'groups/' + this.$route.params.group_id + '/tasks'\n    }\n  },\n  methods: {\n    getPosts() {\n         axios.get(this.postApi)\n        .then(data => this.posts = data.data.posts);\n    },\n    getGroup() {\n         axios.get(API +'groups/' + this.$route.params.group_id)\n        .then(data => this.group = data.data);\n    },\n    getGroups() {\n         axios.get(API + 'groups')\n          .then(data => this.groups = data.data);\n    },\n    getTasks() {\n         axios.get(this.taskApi)\n          .then(data => this.tasks = data.data);\n    }\n  },\n  mounted() {\n    this.getGroup();\n    this.getGroups();\n    this.getPosts();\n    this.getTasks();\n  }\n\n}\n</script>"]}]}