{"remainingRequest":"/home/canel/Code/front-end/pri-git/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/canel/Code/front-end/pri-git/src/components/Date.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/canel/Code/front-end/pri-git/src/components/Date.vue","mtime":1580247076827},{"path":"/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSovCiAgZXhwb3J0IGRlZmF1bHQgewogICAgZGF0YTogdm0gPT4gKHsKICAgICAgZGF0ZTogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLnN1YnN0cigwLCAxMCksCiAgICAgIGRhdGVGb3JtYXR0ZWQ6IHZtLmZvcm1hdERhdGUobmV3IERhdGUoKS50b0lTT1N0cmluZygpLnN1YnN0cigwLCAxMCkpLAogICAgICBtZW51MTogZmFsc2UsCiAgICAgIG1lbnUyOiBmYWxzZSwKICAgIH0pLAoKICAgIGNvbXB1dGVkOiB7CiAgICAgIGNvbXB1dGVkRGF0ZUZvcm1hdHRlZCAoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0RGF0ZSh0aGlzLmRhdGUpCiAgICAgIH0sCiAgICB9LAoKICAgIHdhdGNoOiB7CiAgICAgIGRhdGUgKCkgewogICAgICAgIHRoaXMuZGF0ZUZvcm1hdHRlZCA9IHRoaXMuZm9ybWF0RGF0ZSh0aGlzLmRhdGUpCiAgICAgIH0sCiAgICB9LAoKICAgIG1ldGhvZHM6IHsKICAgICAgbmV3RGF0ZSgpIHsKICAgICAgICB0aGlzLiRlbWl0KCduZXdEYXRlJywgdGhpcy5kYXRlKTsKICAgICAgfSwKICAgICAgZm9ybWF0RGF0ZSAoZGF0ZSkgewogICAgICAgIGlmICghZGF0ZSkgcmV0dXJuIG51bGwKCiAgICAgICAgY29uc3QgW3llYXIsIG1vbnRoLCBkYXldID0gZGF0ZS5zcGxpdCgnLScpCiAgICAgICAgcmV0dXJuIGAke21vbnRofS8ke2RheX0vJHt5ZWFyfWAKICAgICAgfSwKICAgICAgcGFyc2VEYXRlIChkYXRlKSB7CiAgICAgICAgaWYgKCFkYXRlKSByZXR1cm4gbnVsbAoKICAgICAgICBjb25zdCBbbW9udGgsIGRheSwgeWVhcl0gPSBkYXRlLnNwbGl0KCcvJykKICAgICAgICByZXR1cm4gYCR7eWVhcn0tJHttb250aC5wYWRTdGFydCgyLCAnMCcpfS0ke2RheS5wYWRTdGFydCgyLCAnMCcpfWAKICAgICAgfSwKICAgIH0sCiAgfQo="},{"version":3,"sources":["Date.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Date.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container>\n      <v-menu\n          ref=\"menu1\"\n          v-model=\"menu1\"\n          :close-on-content-click=\"false\"\n          transition=\"scale-transition\"\n          offset-y\n          max-width=\"290px\"\n          min-width=\"290px\"\n        >\n          <template v-slot:activator=\"{ on }\">\n            <v-text-field\n              v-model=\"dateFormatted\"\n              label=\"Date\"\n              hint=\"MM/DD/YYYY format\"\n              persistent-hint\n              prepend-icon=\"mdi-calendar-today\"\n              @blur=\"date = parseDate(dateFormatted)\"\n              v-on=\"on\"\n            ></v-text-field>\n          </template>\n          <v-date-picker v-model=\"date\" no-title @input=\"menu1 = false\"></v-date-picker>\n        </v-menu>\n  </v-container>\n</template>\n\n<script>\n/*eslint-disable no-console*/\n  export default {\n    data: vm => ({\n      date: new Date().toISOString().substr(0, 10),\n      dateFormatted: vm.formatDate(new Date().toISOString().substr(0, 10)),\n      menu1: false,\n      menu2: false,\n    }),\n\n    computed: {\n      computedDateFormatted () {\n        return this.formatDate(this.date)\n      },\n    },\n\n    watch: {\n      date () {\n        this.dateFormatted = this.formatDate(this.date)\n      },\n    },\n\n    methods: {\n      newDate() {\n        this.$emit('newDate', this.date);\n      },\n      formatDate (date) {\n        if (!date) return null\n\n        const [year, month, day] = date.split('-')\n        return `${month}/${day}/${year}`\n      },\n      parseDate (date) {\n        if (!date) return null\n\n        const [month, day, year] = date.split('/')\n        return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`\n      },\n    },\n  }\n</script>"]}]}