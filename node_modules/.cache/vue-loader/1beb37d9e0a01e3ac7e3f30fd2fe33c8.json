{"remainingRequest":"/workspace/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspace/front-end/src/components/SearchBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspace/front-end/src/components/SearchBar.vue","mtime":1580405033707},{"path":"/workspace/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1580239219881},{"path":"/workspace/front-end/node_modules/babel-loader/lib/index.js","mtime":1580239219861},{"path":"/workspace/front-end/node_modules/vuetify-loader/lib/loader.js","mtime":1580239220578},{"path":"/workspace/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1580239219881},{"path":"/workspace/front-end/node_modules/vue-loader/lib/index.js","mtime":1580239220548}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUqLwovKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqLwppbXBvcnQgeyBBUEkgfSBmcm9tICIuLi8uLi9jb25maWcvY29uZmlnIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiAoKSA9PiAoewogICAgZGVzY3JpcHRpb25MaW1pdDogNjAsCiAgICBlbnRyaWVzOiBbXSwKICAgIGlzTG9hZGluZzogZmFsc2UsCiAgICBtb2RlbDogbnVsbCwKICAgIHNlYXJjaDogbnVsbAogIH0pLAoKICBjb21wdXRlZDogewogICAgZmllbGRzKCkgewogICAgICBpZiAoIXRoaXMubW9kZWwpIHJldHVybiBbXTsKCiAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLm1vZGVsKS5tYXAoa2V5ID0+IHsKICAgICAgICByZXR1cm4gewogICAgICAgICAga2V5LAogICAgICAgICAgdmFsdWU6IHRoaXMubW9kZWxba2V5XSB8fCAibi9hIgogICAgICAgIH07CiAgICAgIH0pOwogICAgfSwKICAgIGl0ZW1zKCkgewogICAgICAvLyAgIGNvbnN0IGVudCA9IHRoaXMuZW50cmllcy5tYXAoZW50cnkgPT4gewogICAgICAvLyAgICAgY29uc3QgRGVzY3JpcHRpb24gPQogICAgICAvLyAgICAgICBlbnRyeS5EZXNjcmlwdGlvbi5sZW5ndGggPiB0aGlzLmRlc2NyaXB0aW9uTGltaXQKICAgICAgLy8gICAgICAgICA/IGVudHJ5LkRlc2NyaXB0aW9uLnNsaWNlKDAsIHRoaXMuZGVzY3JpcHRpb25MaW1pdCkgKyAiLi4uIgogICAgICAvLyAgICAgICAgIDogZW50cnkuRGVzY3JpcHRpb247CgogICAgICAvLyAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGVudHJ5LCB7IERlc2NyaXB0aW9uIH0pOwogICAgICAvLyAgIH0pOwogICAgICAvLyAgIGNvbnNvbGUubG9nKGVudCk7CiAgICAgIHJldHVybiB0aGlzLmVudHJpZXM7CiAgICB9CiAgfSwKCiAgd2F0Y2g6IHsKICAgIHNlYXJjaCh2YWwpIHsKICAgICAgaWYgKHRoaXMuaXRlbXMubGVuZ3RoID4gMCkgcmV0dXJuOwoKICAgICAgaWYgKHRoaXMuaXNMb2FkaW5nKSByZXR1cm47CgogICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7CgogICAgICAvLyAgIGZldGNoKCJodHRwczovL2FwaS5wdWJsaWNhcGlzLm9yZy9lbnRyaWVzIikKICAgICAgLy8gICAgIC50aGVuKHJlcyA9PiByZXMuanNvbigpKQogICAgICAvLyAgICAgLnRoZW4ocmVzID0+IHsKICAgICAgLy8gICAgICAgY29uc3QgeyBjb3VudCwgZW50cmllcyB9ID0gcmVzOwogICAgICAvLyAgICAgICB0aGlzLmNvdW50ID0gY291bnQ7CiAgICAgIC8vICAgICAgIHRoaXMuZW50cmllcyA9IGVudHJpZXM7CiAgICAgIC8vICAgICB9KQogICAgICAvLyAgICAgLmNhdGNoKGVyciA9PiB7CiAgICAgIC8vICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgIC8vICAgICB9KQogICAgICAvLyAgICAgLmZpbmFsbHkoKCkgPT4gKHRoaXMuaXNMb2FkaW5nID0gZmFsc2UpKTsKCiAgICAgIGF4aW9zCiAgICAgICAgLmdldChgJHtBUEl9dXNlcnNgKQogICAgICAgIC50aGVuKCh7IGRhdGEgfSkgPT4gewogICAgICAgICAgdGhpcy5jb3VudCA9IGRhdGEubGVuZ3RoOwogICAgICAgICAgdGhpcy5lbnRyaWVzID0gZGF0YTsKICAgICAgICB9KQogICAgICAgIC5jYXRjaChlcnIgPT4gewogICAgICAgICAgY29uc29sZS5sb2coZXJyKTsKICAgICAgICB9KQogICAgICAgIC5maW5hbGx5KCgpID0+ICh0aGlzLmlzTG9hZGluZyA9IGZhbHNlKSk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["SearchBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SearchBar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-card color=\"red lighten-2\" dark>\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <br />\n    <v-card-text>\n      <v-autocomplete\n        v-model=\"model\"\n        :items=\"items\"\n        :loading=\"isLoading\"\n        :search-input.sync=\"search\"\n        color=\"white\"\n        hide-no-data\n        hide-selected\n        item-text=\"nome\"\n        item-value=\"API\"\n        label=\"Public APIs\"\n        placeholder=\"Start typing to Search\"\n        prepend-icon=\"mdi-database-search\"\n        return-object\n      ></v-autocomplete>\n    </v-card-text>\n    <v-divider></v-divider>\n    <v-expand-transition>\n      <v-list v-if=\"model\" class=\"red lighten-3\">\n        <v-list-item v-for=\"(field, i) in fields\" :key=\"i\">\n          <v-list-item-content>\n            <v-list-item-title v-text=\"field.value\"></v-list-item-title>\n            <v-list-item-subtitle v-text=\"field.key\"></v-list-item-subtitle>\n          </v-list-item-content>\n        </v-list-item>\n      </v-list>\n    </v-expand-transition>\n    <v-card-actions>\n      <v-spacer></v-spacer>\n      <v-btn :disabled=\"!model\" color=\"grey darken-3\" @click=\"model = null\">\n        Clear\n        <v-icon right>mdi-close-circle</v-icon>\n      </v-btn>\n    </v-card-actions>\n  </v-card>\n</template>\n\n<script>\n/* eslint-disable no-console*/\n/* eslint-disable no-unused-vars */\nimport { API } from \"../../config/config\";\nimport axios from \"axios\";\n\nexport default {\n  data: () => ({\n    descriptionLimit: 60,\n    entries: [],\n    isLoading: false,\n    model: null,\n    search: null\n  }),\n\n  computed: {\n    fields() {\n      if (!this.model) return [];\n\n      return Object.keys(this.model).map(key => {\n        return {\n          key,\n          value: this.model[key] || \"n/a\"\n        };\n      });\n    },\n    items() {\n      //   const ent = this.entries.map(entry => {\n      //     const Description =\n      //       entry.Description.length > this.descriptionLimit\n      //         ? entry.Description.slice(0, this.descriptionLimit) + \"...\"\n      //         : entry.Description;\n\n      //     return Object.assign({}, entry, { Description });\n      //   });\n      //   console.log(ent);\n      return this.entries;\n    }\n  },\n\n  watch: {\n    search(val) {\n      if (this.items.length > 0) return;\n\n      if (this.isLoading) return;\n\n      this.isLoading = true;\n\n      //   fetch(\"https://api.publicapis.org/entries\")\n      //     .then(res => res.json())\n      //     .then(res => {\n      //       const { count, entries } = res;\n      //       this.count = count;\n      //       this.entries = entries;\n      //     })\n      //     .catch(err => {\n      //       console.log(err);\n      //     })\n      //     .finally(() => (this.isLoading = false));\n\n      axios\n        .get(`${API}users`)\n        .then(({ data }) => {\n          this.count = data.length;\n          this.entries = data;\n        })\n        .catch(err => {\n          console.log(err);\n        })\n        .finally(() => (this.isLoading = false));\n    }\n  }\n};\n</script>\n\n<style>\n</style>"]}]}