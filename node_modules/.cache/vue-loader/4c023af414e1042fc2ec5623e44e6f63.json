{"remainingRequest":"/workspace/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspace/front-end/src/components/PostForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspace/front-end/src/components/PostForm.vue","mtime":1580239220748},{"path":"/workspace/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1580239219881},{"path":"/workspace/front-end/node_modules/babel-loader/lib/index.js","mtime":1580239219861},{"path":"/workspace/front-end/node_modules/vuetify-loader/lib/loader.js","mtime":1580239220578},{"path":"/workspace/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1580239219881},{"path":"/workspace/front-end/node_modules/vue-loader/lib/index.js","mtime":1580239220548}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHZhbGlkYXRpb25NaXhpbiB9IGZyb20gJ3Z1ZWxpZGF0ZSc7CmltcG9ydCB7IHJlcXVpcmVkIH0gZnJvbSAndnVlbGlkYXRlL2xpYi92YWxpZGF0b3JzJzsKaW1wb3J0IHsgVVNFUiB9IGZyb20gJy4uLy4uL2NvbmZpZy9jb25maWcnOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwoKLyplc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlKi8KCmV4cG9ydCBkZWZhdWx0IHsKICBtaXhpbnM6IFt2YWxpZGF0aW9uTWl4aW5dLAogIHByb3BzOiBbJ2FwaSddLAogIHZhbGlkYXRpb25zOiB7CiAgICB0aXRsZTogeyByZXF1aXJlZCB9LAogICAgYm9keTogeyByZXF1aXJlZCB9LAogICAgdGFnOiB7IHJlcXVpcmVkIH0KICB9LAoKICBkYXRhOiAoKSA9PiAoewogICAgdGl0bGU6ICcnLAogICAgcnVsZXM6IFt2ID0+ICEhdiB8fCAnQ29udGVudCBpcyByZXF1aXJlZC4nXSwKICAgIGJvZHk6ICcnLAogICAgdGFnOiAnJywKICB9KSwKCiAgY29tcHV0ZWQ6IHsKICAgIHRpdGxlRXJyb3JzICgpIHsKICAgICAgY29uc3QgZXJyb3JzID0gW10KICAgICAgaWYgKCF0aGlzLiR2LnRpdGxlLiRkaXJ0eSkgcmV0dXJuIGVycm9ycwogICAgICAhdGhpcy4kdi50aXRsZS5yZXF1aXJlZCAmJiBlcnJvcnMucHVzaCgnVGl0bGUgaXMgcmVxdWlyZWQuJykKICAgICAgcmV0dXJuIGVycm9ycwogICAgfSwKICAgIHRhZ0Vycm9ycyAoKSB7CiAgICAgIGNvbnN0IGVycm9ycyA9IFtdCiAgICAgIGlmICghdGhpcy4kdi50YWcuJGRpcnR5KSByZXR1cm4gZXJyb3JzCiAgICAgIHJldHVybiBlcnJvcnMKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICBzdWJtaXQgKCkgewogICAgICBheGlvcy5wb3N0KHRoaXMuYXBpICwgewogICAgICAgIHBvc3RlZF9ieTogVVNFUiwKICAgICAgICB0aXRsZTogdGhpcy50aXRsZSwKICAgICAgICBib2R5OiB0aGlzLmJvZHksCiAgICAgICAgdGFnczogW3RoaXMudGFnXQogICAgICB9KQogICAgICAudGhlbigoKSA9PiB7IAogICAgICAgIHRoaXMuJGVtaXQoJ25ld1Bvc3QnKTsgCiAgICAgICAgdGhpcy5jbGVhcigpCiAgICAgIH0pOwogICAgfSwKICAgIGNsZWFyICgpIHsKICAgICAgdGhpcy4kdi4kcmVzZXQoKQogICAgICB0aGlzLnRpdGxlID0gJycKICAgICAgdGhpcy5ib2R5ID0gJycKICAgICAgdGhpcy50YWcgPSAnJwogICAgfSwKICB9Cn0K"},{"version":3,"sources":["PostForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PostForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-card class=\"pr-2 pl-2 pb-2 mb-4\">\n    <form>\n      <v-text-field\n        v-model=\"title\"\n        :error-messages=\"titleErrors\"\n        label=\"Title\"\n        required\n        @input=\"$v.title.$touch()\"\n        @blur=\"$v.title.$touch()\"\n      ></v-text-field>\n      <v-textarea\n        counter\n        outlined\n        v-model=\"body\"\n        label=\"Content\"\n        :rules=\"rules\"\n      ></v-textarea>\n      <v-text-field\n        v-model=\"tag\"\n        :error-messages=\"tagErrors\"\n        label=\"Tag\"\n        @input=\"$v.tag.$touch()\"\n        @blur=\"$v.tag.$touch()\"\n      ></v-text-field>\n\n      <v-btn class=\"mr-4\" @click=\"submit\">submit</v-btn>\n      <v-btn @click=\"clear\">clear</v-btn>\n    </form>\n  </v-card>\n</template>\n\n\n<script>\n  import { validationMixin } from 'vuelidate';\n  import { required } from 'vuelidate/lib/validators';\n  import { USER } from '../../config/config';\n  import axios from \"axios\";\n\n  /*eslint-disable no-console*/\n\n  export default {\n    mixins: [validationMixin],\n    props: ['api'],\n    validations: {\n      title: { required },\n      body: { required },\n      tag: { required }\n    },\n\n    data: () => ({\n      title: '',\n      rules: [v => !!v || 'Content is required.'],\n      body: '',\n      tag: '',\n    }),\n\n    computed: {\n      titleErrors () {\n        const errors = []\n        if (!this.$v.title.$dirty) return errors\n        !this.$v.title.required && errors.push('Title is required.')\n        return errors\n      },\n      tagErrors () {\n        const errors = []\n        if (!this.$v.tag.$dirty) return errors\n        return errors\n      }\n    },\n\n    methods: {\n      submit () {\n        axios.post(this.api , {\n          posted_by: USER,\n          title: this.title,\n          body: this.body,\n          tags: [this.tag]\n        })\n        .then(() => { \n          this.$emit('newPost'); \n          this.clear()\n        });\n      },\n      clear () {\n        this.$v.$reset()\n        this.title = ''\n        this.body = ''\n        this.tag = ''\n      },\n    }\n  }\n</script>"]}]}