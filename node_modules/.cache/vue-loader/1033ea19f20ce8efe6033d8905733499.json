{"remainingRequest":"/workspace/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspace/front-end/src/components/Post.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspace/front-end/src/components/Post.vue","mtime":1580407381626},{"path":"/workspace/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1580239219881},{"path":"/workspace/front-end/node_modules/babel-loader/lib/index.js","mtime":1580239219861},{"path":"/workspace/front-end/node_modules/vuetify-loader/lib/loader.js","mtime":1580239220578},{"path":"/workspace/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1580239219881},{"path":"/workspace/front-end/node_modules/vue-loader/lib/index.js","mtime":1580239220548}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IFVTRVIsIEFQSSB9IGZyb20gIi4uLy4uL2NvbmZpZy9jb25maWciOwppbXBvcnQgQ29tbWVudHNGb3JtIGZyb20gIi4uL2NvbXBvbmVudHMvQ29tbWVudHNGb3JtIjsKaW1wb3J0IENvbW1lbnRzIGZyb20gIi4uL2NvbXBvbmVudHMvQ29tbWVudHMiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAidnVleCI7CmltcG9ydCBtb21lbnQgZnJvbSAibW9tZW50IjsKCi8qZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSovCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogWyJwb3N0Il0sCiAgY29tcG9uZW50czogewogICAgIndtLWNvbW1lbnRmb3JtIjogQ29tbWVudHNGb3JtLAogICAgIndtLWNvbW1lbnRzIjogQ29tbWVudHMKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtZW51OiBmYWxzZSwKICAgICAgbmxpa2VzOiB0aGlzLnBvc3QubGlrZXMubGVuZ3RoLAogICAgICBsaWtlZDogZmFsc2UsCiAgICAgIGNvbW1lbnRzOiB0aGlzLnBvc3QuY29tbWVudHMsCiAgICAgIGZyb21Ob3c6IHRoaXMucG9zdC5mcm9tTm93CiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgbGlrZSgpIHsKICAgICAgYXhpb3MKICAgICAgICAucG9zdChBUEkgKyAicG9zdHMvIiArIHRoaXMucG9zdC5faWQgKyAiL2xpa2UiLCB7CiAgICAgICAgICB1c2VyOiBVU0VSCiAgICAgICAgfSkKICAgICAgICAudGhlbihwID0+IHsKICAgICAgICAgIHRoaXMubmxpa2VzID0gcC5kYXRhLmxpa2VzLmxlbmd0aDsKICAgICAgICAgIHRoaXMubGlrZWQgPSBwLmRhdGEubGlrZXMuaW5jbHVkZXModGhpcy5pZCk7CiAgICAgICAgfSk7CiAgICB9LAogICAgZ2V0Q29tbWVudHMoKSB7CiAgICAgIGF4aW9zLmdldChBUEkgKyAicG9zdHMvIiArIHRoaXMucG9zdC5faWQgKyAiL2NvbW1lbnRzIikudGhlbihkYXRhID0+IHsKICAgICAgICB0aGlzLmNvbW1lbnRzID0gZGF0YS5kYXRhOwogICAgICB9KTsKICAgIH0sCiAgICBpc0xpa2VkKCkgewogICAgICB0aGlzLmxpa2VkID0gdGhpcy5wb3N0Lmxpa2VzLmluY2x1ZGVzKHRoaXMuaWQpOwogICAgfSwKICAgIHVwZGF0ZUZyb21Ob3coKSB7CiAgICAgIHNldEludGVydmFsKCgpID0+IHsKICAgICAgICB0aGlzLmZyb21Ob3cgPSBtb21lbnQodGhpcy5wb3N0LmRhdGUpLmZyb21Ob3coKTsKICAgICAgfSwgNjAwMDApOwogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIC8vIHRoaXMuZ2V0Q29tbWVudHMoKTsKICAgIHRoaXMuaXNMaWtlZCgpOwogICAgdGhpcy51cGRhdGVGcm9tTm93KCk7CiAgfSwKICBjb21wdXRlZDogewogICAgLi4ubWFwR2V0dGVycyh7CiAgICAgIGlkOiAiZ2V0SWQiCiAgICB9KQogIH0KfTsK"},{"version":3,"sources":["Post.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Post.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-card class=\"mb-2\">\n    <v-list-item three-line>\n      <v-menu v-model=\"menu\" top transition=\"slide-y-transition\" origin=\"bottom\">\n        <template v-slot:activator=\"{ on }\">\n          <v-list-item-avatar v-on=\"on\" size=\"40\" color=\"primary\">\n            <img :src=\"post.posted_by.image\" :alt=\"post.posted_by.nome\" />\n          </v-list-item-avatar>\n        </template>\n        <v-card width=\"280\">\n          <v-img :src=\"post.posted_by.image\"></v-img>\n          <v-list class=\"no-border\" dark tile>\n            <v-list-item>\n              <v-list-item-content>\n                <v-list-item-title>{{post.posted_by.nome}}</v-list-item-title>\n                <v-list-item-subtitle>{{post.posted_by.email}}</v-list-item-subtitle>\n              </v-list-item-content>\n              <v-list-item-action>\n                <v-btn\n                  icon\n                  @click=\"() => {\n                    $router.push({path : `/users/${post.posted_by._id}`});\n                    }\"\n                >\n                  <v-icon>mdi-account-box</v-icon>\n                </v-btn>\n              </v-list-item-action>\n            </v-list-item>\n          </v-list>\n          <v-list-item @click=\"() => {}\">\n            <v-icon class=\"ma-auto\">mdi-message-text</v-icon>\n          </v-list-item>\n        </v-card>\n      </v-menu>\n\n      <v-list-item-content>\n        <v-list-item-title class=\"headline mb-0\">{{post.title}}</v-list-item-title>\n        <v-list-item-action-text>{{fromNow}}</v-list-item-action-text>\n        <v-chip-group column>\n          <v-chip v-for=\"tag in post.tags\" :key=\"tag\">{{ tag }}</v-chip>\n        </v-chip-group>\n\n        <v-list-item-action-text class=\"black--text mt-2 body-1\">{{post.body}}</v-list-item-action-text>\n      </v-list-item-content>\n    </v-list-item>\n    <v-card-actions class=\"d-flex flex-row-reverse\">\n      <v-btn @click=\"like\" class=\"secprimary\" text rounded>\n        <span class=\"white--text text-lowercase mr-2\">{{ nlikes }}</span>\n        <v-icon v-if=\"liked\" color=\"white\">mdi-thumb-up</v-icon>\n        <v-icon v-else color=\"white\">mdi-thumb-up-outline</v-icon>\n      </v-btn>\n    </v-card-actions>\n\n    <wm-comments @newLike=\"getComments\" :postid=\"post._id\" :coms=\"comments\"></wm-comments>\n    <wm-commentform @newComment=\"getComments\" :postid=\"post._id\"></wm-commentform>\n  </v-card>\n</template>\n\n<script>\nimport { USER, API } from \"../../config/config\";\nimport CommentsForm from \"../components/CommentsForm\";\nimport Comments from \"../components/Comments\";\nimport axios from \"axios\";\nimport { mapGetters } from \"vuex\";\nimport moment from \"moment\";\n\n/*eslint-disable no-console*/\nexport default {\n  props: [\"post\"],\n  components: {\n    \"wm-commentform\": CommentsForm,\n    \"wm-comments\": Comments\n  },\n  data() {\n    return {\n      menu: false,\n      nlikes: this.post.likes.length,\n      liked: false,\n      comments: this.post.comments,\n      fromNow: this.post.fromNow\n    };\n  },\n  methods: {\n    like() {\n      axios\n        .post(API + \"posts/\" + this.post._id + \"/like\", {\n          user: USER\n        })\n        .then(p => {\n          this.nlikes = p.data.likes.length;\n          this.liked = p.data.likes.includes(this.id);\n        });\n    },\n    getComments() {\n      axios.get(API + \"posts/\" + this.post._id + \"/comments\").then(data => {\n        this.comments = data.data;\n      });\n    },\n    isLiked() {\n      this.liked = this.post.likes.includes(this.id);\n    },\n    updateFromNow() {\n      setInterval(() => {\n        this.fromNow = moment(this.post.date).fromNow();\n      }, 60000);\n    }\n  },\n  mounted() {\n    // this.getComments();\n    this.isLiked();\n    this.updateFromNow();\n  },\n  computed: {\n    ...mapGetters({\n      id: \"getId\"\n    })\n  }\n};\n</script>\n\n<style scoped>\n.no-border {\n  border-radius: 0px;\n}\n</style>"]}]}