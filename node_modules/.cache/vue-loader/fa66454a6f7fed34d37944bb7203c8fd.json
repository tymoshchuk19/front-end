{"remainingRequest":"/workspace/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspace/front-end/src/views/GroupPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspace/front-end/src/views/GroupPage.vue","mtime":1580452886527},{"path":"/workspace/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1580239219881},{"path":"/workspace/front-end/node_modules/babel-loader/lib/index.js","mtime":1580239219861},{"path":"/workspace/front-end/node_modules/vuetify-loader/lib/loader.js","mtime":1580239220578},{"path":"/workspace/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1580239219881},{"path":"/workspace/front-end/node_modules/vue-loader/lib/index.js","mtime":1580239220548}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSovCgppbXBvcnQgUG9zdHMgZnJvbSAiLi4vY29tcG9uZW50cy9Qb3N0cyI7CmltcG9ydCBQb3N0Rm9ybSBmcm9tICIuLi9jb21wb25lbnRzL1Bvc3RGb3JtIjsKaW1wb3J0IEhlYWRlciBmcm9tICIuLi9jb21wb25lbnRzL0hlYWRlciI7CmltcG9ydCBUYXNrcyBmcm9tICIuLi9jb21wb25lbnRzL1Rhc2tzIjsKaW1wb3J0IFRhc2tzRm9ybSBmcm9tICIuLi9jb21wb25lbnRzL1Rhc2tzRm9ybSI7CmltcG9ydCBHcm91cEZvcm0gZnJvbSAiLi4vY29tcG9uZW50cy9Hcm91cEZvcm0iOwppbXBvcnQgR3JvdXBzIGZyb20gIi4uL2NvbXBvbmVudHMvR3JvdXBzIjsKaW1wb3J0IFRvcEJhclZ1ZSBmcm9tICIuLi9jb21wb25lbnRzL1RvcEJhci52dWUiOwoKaW1wb3J0IHsgQVBJIH0gZnJvbSAiLi4vLi4vY29uZmlnL2NvbmZpZyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBGb290ZXIgZnJvbSAiLi4vY29tcG9uZW50cy9Gb290ZXIiOwppbXBvcnQgTWVtYmVycyBmcm9tICIuLi9jb21wb25lbnRzL01lbWJlcnMiOwppbXBvcnQgTmV3TWVtYmVyIGZyb20gIi4uL2NvbXBvbmVudHMvTmV3TWVtYmVyIjsKaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICJ2dWV4IjsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICAid20tcG9zdHMiOiBQb3N0cywKICAgICJ3bS1wb3N0Zm9ybSI6IFBvc3RGb3JtLAogICAgIndtLWhlYWRlciI6IEhlYWRlciwKICAgICJ3bS10YXNrcyI6IFRhc2tzLAogICAgIndtLXRhc2tmb3JtIjogVGFza3NGb3JtLAogICAgIndtLWdyb3VwZm9ybSI6IEdyb3VwRm9ybSwKICAgICJ3bS1ncm91cHMiOiBHcm91cHMsCiAgICAid20tZm9vdGVyIjogRm9vdGVyLAogICAgIndtLW1lbWJlcnMiOiBNZW1iZXJzLAogICAgIndtLW5ld21lbWJlcnMiOiBOZXdNZW1iZXIsCiAgICAid20tdG9wYmFyIjogVG9wQmFyVnVlCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWRtaW46IGZhbHNlLAogICAgICBwYXRoOiAiIiwKICAgICAgc2VhcmNoOiAiIiwKICAgICAgbWVtYmVyczogIiIsCiAgICAgIG5ld21lbWJlcjogIiIsCiAgICAgIGdyb3VwOiB7IG5hbWU6IG51bGwgfSwKICAgICAgcG9zdHM6IG51bGwsCiAgICAgIGdyb3VwczogbnVsbCwKICAgICAgZ3JvdXBfaWQ6IHRoaXMuJHJvdXRlLnBhcmFtcy5ncm91cF9pZCwKICAgICAgdGFza3M6IG51bGwsCiAgICAgIHBvc3RBcGk6IEFQSSArICJncm91cHMvIiArIHRoaXMuJHJvdXRlLnBhcmFtcy5ncm91cF9pZCArICIvcG9zdHMiLAogICAgICB0YXNrQXBpOiBBUEkgKyAiZ3JvdXBzLyIgKyB0aGlzLiRyb3V0ZS5wYXJhbXMuZ3JvdXBfaWQgKyAiL3Rhc2tzIgogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICAkcm91dGU6IGZ1bmN0aW9uKHRvKSB7CiAgICAgIHRoaXMuZ3JvdXBfaWQgPSB0by5wYXJhbXMuZ3JvdXBfaWQ7CiAgICAgIHRoaXMudGFza0FwaSA9IEFQSSArICJncm91cHMvIiArIHRvLnBhcmFtcy5ncm91cF9pZCArICIvdGFza3MiOwogICAgICB0aGlzLnBvc3RBcGkgPSBBUEkgKyAiZ3JvdXBzLyIgKyB0by5wYXJhbXMuZ3JvdXBfaWQgKyAiL3Bvc3RzIjsKICAgICAgdGhpcy5nZXRHcm91cCh0by5wYXJhbXMuZ3JvdXBfaWQpOwogICAgICB0aGlzLmdldEdyb3VwcygpOwogICAgICB0aGlzLmdldFBvc3RzKHRvLnBhcmFtcy5ncm91cF9pZCk7CiAgICAgIHRoaXMuZ2V0VGFza3ModG8ucGFyYW1zLmdyb3VwX2lkKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFBvc3RzKGdyb3VwX2lkKSB7CiAgICAgIGF4aW9zCiAgICAgICAgLmdldChBUEkgKyAiZ3JvdXBzLyIgKyBncm91cF9pZCArICIvcG9zdHMiKQogICAgICAgIC50aGVuKGRhdGEgPT4gKHRoaXMucG9zdHMgPSBkYXRhLmRhdGEucG9zdHMpKTsKICAgIH0sCiAgICBnZXRHcm91cChncm91cF9pZCkgewogICAgICBheGlvcy5nZXQoQVBJICsgImdyb3Vwcy8iICsgZ3JvdXBfaWQpLnRoZW4oZGF0YSA9PiB7CiAgICAgICAgdGhpcy5ncm91cCA9IGRhdGEuZGF0YTsKICAgICAgICB0aGlzLmFkbWluID0gdGhpcy5ncm91cC51c2Vycy5maW5kKG9iaiA9PiB7CiAgICAgICAgICByZXR1cm4gb2JqLnVzZXIuX2lkID09PSB0aGlzLnVzZXIuX2lkICYmIG9iai5yb2xlID09PSAiYWRtaW4iOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBnZXRHcm91cHMoKSB7CiAgICAgIGF4aW9zLmdldChBUEkgKyAibXkvZ3JvdXBzIikudGhlbihkYXRhID0+ICh0aGlzLmdyb3VwcyA9IGRhdGEuZGF0YSkpOwogICAgfSwKICAgIGdldE1lbWJlcnMoKSB7CiAgICAgIGF4aW9zLmdldChBUEkgKyAiZ3JvdXBzLyIgKyB0aGlzLmdyb3VwX2lkICsgIi9tZW1iZXJzIikudGhlbihkYXRhID0+IHsKICAgICAgICB0aGlzLm1lbWJlcnMgPSBkYXRhLmRhdGE7CiAgICAgIH0pOwogICAgfSwKICAgIGdldFRhc2tzKGdyb3VwX2lkKSB7CiAgICAgIGF4aW9zCiAgICAgICAgLmdldChBUEkgKyAiZ3JvdXBzLyIgKyBncm91cF9pZCArICIvdGFza3MiKQogICAgICAgIC50aGVuKGRhdGEgPT4gKHRoaXMudGFza3MgPSBkYXRhLmRhdGEpKTsKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldEdyb3VwKHRoaXMuJHJvdXRlLnBhcmFtcy5ncm91cF9pZCk7CiAgICB0aGlzLmdldEdyb3VwcygpOwogICAgdGhpcy5nZXRNZW1iZXJzKCk7CiAgICB0aGlzLmdldFBvc3RzKHRoaXMuJHJvdXRlLnBhcmFtcy5ncm91cF9pZCk7CiAgICB0aGlzLmdldFRhc2tzKHRoaXMuJHJvdXRlLnBhcmFtcy5ncm91cF9pZCk7CiAgfSwKICBjb21wdXRlZDogewogICAgZmlsdGVyZWRNZW1iZXJzOiBmdW5jdGlvbigpIHsKICAgICAgcmV0dXJuIHRoaXMubWVtYmVycy5maWx0ZXIobWVtYmVyID0+IHsKICAgICAgICByZXR1cm4gbWVtYmVyLnVzZXIubm9tZS5tYXRjaCh0aGlzLnNlYXJjaCk7CiAgICAgIH0pOwogICAgfSwKICAgIGZpbHRlcmVkRnJpZW5kczogZnVuY3Rpb24oKSB7CiAgICAgIHJldHVybiB0aGlzLnVzZXIuZnJpZW5kcy5maWx0ZXIoZnJpZW5kID0+IHsKICAgICAgICByZXR1cm4gZnJpZW5kLm5vbWUubWF0Y2godGhpcy5uZXdtZW1iZXIpOwogICAgICB9KTsKICAgIH0sCiAgICAuLi5tYXBTdGF0ZShbInVzZXIiXSkKICB9Cn07Cg=="},{"version":3,"sources":["GroupPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GroupPage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"page\">\n    <wm-topbar />\n    <v-row>\n      <v-col cols=\"3\">\n        <wm-groupform @newGroup=\"getGroups\"></wm-groupform>\n        <wm-groups :groups=\"groups\"></wm-groups>\n        <v-divider></v-divider>\n        <v-text-field\n          type=\"text\"\n          v-model=\"newmember\"\n          filled\n          label=\"Add member\"\n          clearable\n        ></v-text-field>\n        <wm-newmembers\n          @newMember=\"() => getMembers()\"\n          :friends=\"filteredFriends\"\n          :perms=\"admin\"\n          :group=\"group_id\"\n        ></wm-newmembers>\n        <v-divider></v-divider>\n        <v-text-field\n          type=\"text\"\n          v-model=\"search\"\n          filled\n          label=\"Group member\"\n          clearable\n        ></v-text-field>\n        <wm-members :members=\"filteredMembers\"></wm-members>\n      </v-col>\n      <v-col cols=\"6\">\n        <wm-header :name=\"group.name\"></wm-header>\n\n        <wm-postform\n          :api=\"postApi\"\n          @newPost=\"() => getPosts($route.params.group_id)\"\n        ></wm-postform>\n        <v-divider class=\"mb-2\"></v-divider>\n        <wm-posts :posts=\"posts\"></wm-posts>\n      </v-col>\n      <v-col cols=\"3\">\n        <wm-taskform\n          v-if=\"admin\"\n          @newTask=\"() => getTasks(group_id)\"\n          :taskApi=\"taskApi\"\n        ></wm-taskform>\n        <wm-tasks\n          :tasks=\"tasks\"\n          :perms=\"admin\"\n          @newTask=\"() => getTasks(group_id)\"\n        ></wm-tasks>\n      </v-col>\n    </v-row>\n    <wm-footer></wm-footer>\n  </div>\n</template>\n\n<script>\n/*eslint-disable no-console*/\n\nimport Posts from \"../components/Posts\";\nimport PostForm from \"../components/PostForm\";\nimport Header from \"../components/Header\";\nimport Tasks from \"../components/Tasks\";\nimport TasksForm from \"../components/TasksForm\";\nimport GroupForm from \"../components/GroupForm\";\nimport Groups from \"../components/Groups\";\nimport TopBarVue from \"../components/TopBar.vue\";\n\nimport { API } from \"../../config/config\";\nimport axios from \"axios\";\nimport Footer from \"../components/Footer\";\nimport Members from \"../components/Members\";\nimport NewMember from \"../components/NewMember\";\nimport { mapState } from \"vuex\";\n\nexport default {\n  components: {\n    \"wm-posts\": Posts,\n    \"wm-postform\": PostForm,\n    \"wm-header\": Header,\n    \"wm-tasks\": Tasks,\n    \"wm-taskform\": TasksForm,\n    \"wm-groupform\": GroupForm,\n    \"wm-groups\": Groups,\n    \"wm-footer\": Footer,\n    \"wm-members\": Members,\n    \"wm-newmembers\": NewMember,\n    \"wm-topbar\": TopBarVue\n  },\n  data() {\n    return {\n      admin: false,\n      path: \"\",\n      search: \"\",\n      members: \"\",\n      newmember: \"\",\n      group: { name: null },\n      posts: null,\n      groups: null,\n      group_id: this.$route.params.group_id,\n      tasks: null,\n      postApi: API + \"groups/\" + this.$route.params.group_id + \"/posts\",\n      taskApi: API + \"groups/\" + this.$route.params.group_id + \"/tasks\"\n    };\n  },\n  watch: {\n    $route: function(to) {\n      this.group_id = to.params.group_id;\n      this.taskApi = API + \"groups/\" + to.params.group_id + \"/tasks\";\n      this.postApi = API + \"groups/\" + to.params.group_id + \"/posts\";\n      this.getGroup(to.params.group_id);\n      this.getGroups();\n      this.getPosts(to.params.group_id);\n      this.getTasks(to.params.group_id);\n    }\n  },\n  methods: {\n    getPosts(group_id) {\n      axios\n        .get(API + \"groups/\" + group_id + \"/posts\")\n        .then(data => (this.posts = data.data.posts));\n    },\n    getGroup(group_id) {\n      axios.get(API + \"groups/\" + group_id).then(data => {\n        this.group = data.data;\n        this.admin = this.group.users.find(obj => {\n          return obj.user._id === this.user._id && obj.role === \"admin\";\n        });\n      });\n    },\n    getGroups() {\n      axios.get(API + \"my/groups\").then(data => (this.groups = data.data));\n    },\n    getMembers() {\n      axios.get(API + \"groups/\" + this.group_id + \"/members\").then(data => {\n        this.members = data.data;\n      });\n    },\n    getTasks(group_id) {\n      axios\n        .get(API + \"groups/\" + group_id + \"/tasks\")\n        .then(data => (this.tasks = data.data));\n    }\n  },\n  mounted() {\n    this.getGroup(this.$route.params.group_id);\n    this.getGroups();\n    this.getMembers();\n    this.getPosts(this.$route.params.group_id);\n    this.getTasks(this.$route.params.group_id);\n  },\n  computed: {\n    filteredMembers: function() {\n      return this.members.filter(member => {\n        return member.user.nome.match(this.search);\n      });\n    },\n    filteredFriends: function() {\n      return this.user.friends.filter(friend => {\n        return friend.nome.match(this.newmember);\n      });\n    },\n    ...mapState([\"user\"])\n  }\n};\n</script>\n\n<style>\nhtml. body {\n  height: 100%;\n}\n</style>\n"]}]}