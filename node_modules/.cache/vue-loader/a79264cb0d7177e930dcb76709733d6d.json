{"remainingRequest":"/workspace/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspace/front-end/src/components/PostForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspace/front-end/src/components/PostForm.vue","mtime":1580268204884},{"path":"/workspace/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1580239219881},{"path":"/workspace/front-end/node_modules/babel-loader/lib/index.js","mtime":1580239219861},{"path":"/workspace/front-end/node_modules/vuetify-loader/lib/loader.js","mtime":1580239220578},{"path":"/workspace/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1580239219881},{"path":"/workspace/front-end/node_modules/vue-loader/lib/index.js","mtime":1580239220548}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHZhbGlkYXRpb25NaXhpbiB9IGZyb20gInZ1ZWxpZGF0ZSI7CmltcG9ydCB7IHJlcXVpcmVkIH0gZnJvbSAidnVlbGlkYXRlL2xpYi92YWxpZGF0b3JzIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKCi8qZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSovCgpleHBvcnQgZGVmYXVsdCB7CiAgbWl4aW5zOiBbdmFsaWRhdGlvbk1peGluXSwKICBwcm9wczogWyJhcGkiXSwKICB2YWxpZGF0aW9uczogewogICAgdGl0bGU6IHsgcmVxdWlyZWQgfSwKICAgIGJvZHk6IHsgcmVxdWlyZWQgfSwKICAgIHRhZzogeyByZXF1aXJlZCB9CiAgfSwKCiAgZGF0YTogKCkgPT4gKHsKICAgIHRpdGxlOiAiIiwKICAgIHJ1bGVzOiBbdiA9PiAhIXYgfHwgIkNvbnRlbnQgaXMgcmVxdWlyZWQuIl0sCiAgICBib2R5OiAiIiwKICAgIHRhZzogbnVsbAogIH0pLAoKICBjb21wdXRlZDogewogICAgdGl0bGVFcnJvcnMoKSB7CiAgICAgIGNvbnN0IGVycm9ycyA9IFtdOwogICAgICBpZiAoIXRoaXMuJHYudGl0bGUuJGRpcnR5KSByZXR1cm4gZXJyb3JzOwogICAgICAhdGhpcy4kdi50aXRsZS5yZXF1aXJlZCAmJiBlcnJvcnMucHVzaCgiVGl0bGUgaXMgcmVxdWlyZWQuIik7CiAgICAgIHJldHVybiBlcnJvcnM7CiAgICB9LAogICAgdGFnRXJyb3JzKCkgewogICAgICBjb25zdCBlcnJvcnMgPSBbXTsKICAgICAgaWYgKCF0aGlzLiR2LnRhZy4kZGlydHkpIHJldHVybiBlcnJvcnM7CiAgICAgIHJldHVybiBlcnJvcnM7CiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgc3VibWl0KCkgewogICAgICBheGlvcwogICAgICAgIC5wb3N0KHRoaXMuYXBpLCB7CiAgICAgICAgICB0aXRsZTogdGhpcy50aXRsZSwKICAgICAgICAgIGJvZHk6IHRoaXMuYm9keSwKICAgICAgICAgIHRhZ3M6IHRoaXMudGFnID8gW3RoaXMudGFnXSA6IFtdCiAgICAgICAgfSkKICAgICAgICAudGhlbigoKSA9PiB7CiAgICAgICAgICB0aGlzLiRlbWl0KCJuZXdQb3N0Iik7CiAgICAgICAgICB0aGlzLmNsZWFyKCk7CiAgICAgICAgfSk7CiAgICB9LAogICAgY2xlYXIoKSB7CiAgICAgIHRoaXMuJHYuJHJlc2V0KCk7CiAgICAgIHRoaXMudGl0bGUgPSAiIjsKICAgICAgdGhpcy5ib2R5ID0gIiI7CiAgICAgIHRoaXMudGFnID0gIiI7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["PostForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PostForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-card class=\"pr-2 pl-2 pb-2 mb-4\">\n    <form>\n      <v-text-field\n        v-model=\"title\"\n        :error-messages=\"titleErrors\"\n        label=\"Title\"\n        required\n        @input=\"$v.title.$touch()\"\n        @blur=\"$v.title.$touch()\"\n      ></v-text-field>\n      <v-textarea counter outlined v-model=\"body\" label=\"Content\" :rules=\"rules\" auto-grow rows=\"1\"></v-textarea>\n      <v-text-field\n        v-model=\"tag\"\n        :error-messages=\"tagErrors\"\n        label=\"Tag\"\n        @input=\"$v.tag.$touch()\"\n        @blur=\"$v.tag.$touch()\"\n      ></v-text-field>\n\n      <v-btn class=\"mr-4\" @click=\"submit\">submit</v-btn>\n      <v-btn @click=\"clear\">clear</v-btn>\n    </form>\n  </v-card>\n</template>\n\n\n<script>\nimport { validationMixin } from \"vuelidate\";\nimport { required } from \"vuelidate/lib/validators\";\nimport axios from \"axios\";\n\n/*eslint-disable no-console*/\n\nexport default {\n  mixins: [validationMixin],\n  props: [\"api\"],\n  validations: {\n    title: { required },\n    body: { required },\n    tag: { required }\n  },\n\n  data: () => ({\n    title: \"\",\n    rules: [v => !!v || \"Content is required.\"],\n    body: \"\",\n    tag: null\n  }),\n\n  computed: {\n    titleErrors() {\n      const errors = [];\n      if (!this.$v.title.$dirty) return errors;\n      !this.$v.title.required && errors.push(\"Title is required.\");\n      return errors;\n    },\n    tagErrors() {\n      const errors = [];\n      if (!this.$v.tag.$dirty) return errors;\n      return errors;\n    }\n  },\n\n  methods: {\n    submit() {\n      axios\n        .post(this.api, {\n          title: this.title,\n          body: this.body,\n          tags: this.tag ? [this.tag] : []\n        })\n        .then(() => {\n          this.$emit(\"newPost\");\n          this.clear();\n        });\n    },\n    clear() {\n      this.$v.$reset();\n      this.title = \"\";\n      this.body = \"\";\n      this.tag = \"\";\n    }\n  }\n};\n</script>"]}]}