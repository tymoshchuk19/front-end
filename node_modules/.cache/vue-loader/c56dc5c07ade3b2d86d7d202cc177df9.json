{"remainingRequest":"/workspace/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspace/front-end/src/components/Post.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/workspace/front-end/src/components/Post.vue","mtime":1580446943977},{"path":"/workspace/front-end/node_modules/css-loader/dist/cjs.js","mtime":1580239220004},{"path":"/workspace/front-end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1580239220548},{"path":"/workspace/front-end/node_modules/postcss-loader/src/index.js","mtime":1580239220271},{"path":"/workspace/front-end/node_modules/vuetify-loader/lib/loader.js","mtime":1580239220578},{"path":"/workspace/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1580239219881},{"path":"/workspace/front-end/node_modules/vue-loader/lib/index.js","mtime":1580239220548}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubm8tYm9yZGVyIHsKICBib3JkZXItcmFkaXVzOiAwcHg7Cn0K"},{"version":3,"sources":["Post.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA;AACA;AACA","file":"Post.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-card class=\"mb-2 d-flex\">\n    <v-list-item three-line>\n      <v-menu\n        v-model=\"menu\"\n        top\n        transition=\"slide-y-transition\"\n        origin=\"bottom\"\n      >\n        <template v-slot:activator=\"{ on }\">\n          <v-list-item-avatar v-on=\"on\" size=\"40\" color=\"primary\">\n            <img :src=\"post.posted_by.image\" :alt=\"post.posted_by.nome\" />\n          </v-list-item-avatar>\n        </template>\n        <v-card width=\"280\">\n          <v-img :src=\"post.posted_by.image\"></v-img>\n          <v-list class=\"no-border\" dark tile>\n            <v-list-item>\n              <v-list-item-content>\n                <v-list-item-title>{{ post.posted_by.nome }}</v-list-item-title>\n                <v-list-item-subtitle>{{\n                  post.posted_by.email\n                }}</v-list-item-subtitle>\n              </v-list-item-content>\n              <v-list-item-action>\n                <v-btn\n                  icon\n                  @click=\"\n                    () => {\n                      $router.push({ path: `/users/${post.posted_by._id}` });\n                    }\n                  \"\n                >\n                  <v-icon>mdi-account-box</v-icon>\n                </v-btn>\n              </v-list-item-action>\n            </v-list-item>\n          </v-list>\n        </v-card>\n      </v-menu>\n\n      <v-list-item-content>\n        <v-list-item-title class=\"headline mb-0\">{{\n          post.title\n        }}</v-list-item-title>\n        <v-list-item-action-text>{{ fromNow }}</v-list-item-action-text>\n        <v-chip-group column>\n          <v-chip v-for=\"tag in post.tags\" :key=\"tag\">{{ tag }}</v-chip>\n        </v-chip-group>\n\n        <v-list-item-action-text class=\"black--text mt-2 body-1\">{{\n          post.body\n        }}</v-list-item-action-text>\n      </v-list-item-content>\n    </v-list-item>\n    <v-card-actions class=\"d-flex flex-row-reverse\">\n      <v-btn @click=\"like\" class=\"secprimary\" text rounded>\n        <span class=\"indigo--text text-lowercase mr-2 font-weight-black\">{{\n          nlikes\n        }}</span>\n        <v-icon v-if=\"liked\" color=\"indigo\">mdi-thumb-up</v-icon>\n        <v-icon v-else color=\"indigo\">mdi-thumb-up-outline</v-icon>\n      </v-btn>\n    </v-card-actions>\n\n    <wm-comments\n      @newLike=\"getComments\"\n      :postid=\"post._id\"\n      :coms=\"comments\"\n    ></wm-comments>\n    <wm-commentform\n      @newComment=\"getComments\"\n      :postid=\"post._id\"\n    ></wm-commentform>\n  </v-card>\n</template>\n\n<script>\nimport { USER, API } from \"../../config/config\";\nimport CommentsForm from \"../components/CommentsForm\";\nimport Comments from \"../components/Comments\";\nimport axios from \"axios\";\nimport { mapGetters } from \"vuex\";\nimport moment from \"moment\";\n\n/*eslint-disable no-console*/\nexport default {\n  props: [\"post\"],\n  components: {\n    \"wm-commentform\": CommentsForm,\n    \"wm-comments\": Comments\n  },\n  data() {\n    return {\n      menu: false,\n      nlikes: this.post.likes.length,\n      liked: false,\n      comments: this.post.comments,\n      fromNow: this.post.fromNow\n    };\n  },\n  methods: {\n    like() {\n      axios\n        .post(API + \"posts/\" + this.post._id + \"/like\", {\n          user: USER\n        })\n        .then(p => {\n          this.nlikes = p.data.likes.length;\n          this.liked = p.data.likes.includes(this.id);\n        });\n    },\n    getComments() {\n      axios.get(API + \"posts/\" + this.post._id + \"/comments\").then(data => {\n        this.comments = data.data;\n      });\n    },\n    isLiked() {\n      this.liked = this.post.likes.includes(this.id);\n    },\n    updateFromNow() {\n      setInterval(() => {\n        this.fromNow = moment(this.post.date).fromNow();\n      }, 60000);\n    }\n  },\n  mounted() {\n    // this.getComments();\n    this.isLiked();\n    this.updateFromNow();\n  },\n  computed: {\n    ...mapGetters({\n      id: \"getId\"\n    })\n  }\n};\n</script>\n\n<style>\n.no-border {\n  border-radius: 0px;\n}\n</style>\n"]}]}