{"remainingRequest":"/home/canel/Code/front-end/pri-git/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/canel/Code/front-end/pri-git/src/components/SideBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/canel/Code/front-end/pri-git/src/components/SideBar.vue","mtime":1580328280940},{"path":"/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAidnVleCI7CgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBkcmF3ZXI6IHRydWUsCiAgICAgIGl0ZW1zOiBbCiAgICAgICAgeyB0aXRsZTogJ0hvbWUnLCBpY29uOiAnbWRpLWhvbWUtY2l0eScgfSwKICAgICAgICB7IHRpdGxlOiAnTXkgQWNjb3VudCcsIGljb246ICdtZGktYWNjb3VudCcgfSwKICAgICAgICB7IHRpdGxlOiAnVXNlcnMnLCBpY29uOiAnbWRpLWFjY291bnQtZ3JvdXAtb3V0bGluZScgfSwKICAgICAgXSwKICAgICAgbWluaTogdHJ1ZSwKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBTdGF0ZShbInVzZXIiXSkKICB9Cn0K"},{"version":3,"sources":["SideBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SideBar.vue","sourceRoot":"src/components","sourcesContent":["\n<template>\n  <v-card>\n    <v-navigation-drawer\n      class=\"primary\"\n      v-model=\"drawer\"\n      :mini-variant.sync=\"mini\"\n      permanent\n      app\n    >\n        <v-list-item class=\"px-2\">\n          <router-link :to=\"{ path: '/' }\">\n            <v-list-item-avatar>\n              <v-img :src=\"user.image\"></v-img>\n            </v-list-item-avatar>\n          </router-link>\n\n          <v-list-item-title \n            class=\"white--text\">{{user.nome}}\n          </v-list-item-title>\n\n          <v-btn\n            icon\n            @click.stop=\"mini = !mini\"\n          >\n            <v-icon>mdi-chevron-left</v-icon>\n          </v-btn>\n        </v-list-item>\n\n      <v-divider></v-divider>\n\n      <v-list dense>\n        <v-list-item\n          v-for=\"item in items\"\n          :key=\"item.title\"\n          link\n        >\n          <v-list-item-icon>\n            <v-icon>{{ item.icon }}</v-icon>\n          </v-list-item-icon>\n\n          <v-list-item-content>\n            <v-list-item-title>{{ item.title }}</v-list-item-title>\n          </v-list-item-content>\n        </v-list-item>\n      </v-list>\n    </v-navigation-drawer>\n  </v-card>\n</template>\n<script>\nimport { mapState } from \"vuex\";\n\nexport default {\n  data () {\n    return {\n      drawer: true,\n      items: [\n        { title: 'Home', icon: 'mdi-home-city' },\n        { title: 'My Account', icon: 'mdi-account' },\n        { title: 'Users', icon: 'mdi-account-group-outline' },\n      ],\n      mini: true,\n    }\n  },\n  computed: {\n    ...mapState([\"user\"])\n  }\n}\n</script>"]}]}