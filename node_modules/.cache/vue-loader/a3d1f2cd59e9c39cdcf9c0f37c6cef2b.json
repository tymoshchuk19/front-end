{"remainingRequest":"/home/canel/Code/front-end/pri-git/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/canel/Code/front-end/pri-git/src/components/Post.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/canel/Code/front-end/pri-git/src/components/Post.vue","mtime":1580322560577},{"path":"/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/canel/Code/front-end/pri-git/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IFVTRVIsIEFQSSB9IGZyb20gIi4uLy4uL2NvbmZpZy9jb25maWciOwppbXBvcnQgQ29tbWVudHNGb3JtIGZyb20gIi4uL2NvbXBvbmVudHMvQ29tbWVudHNGb3JtIjsKaW1wb3J0IENvbW1lbnRzIGZyb20gIi4uL2NvbXBvbmVudHMvQ29tbWVudHMiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAidnVleCI7CmltcG9ydCBtb21lbnQgZnJvbSAibW9tZW50IjsKCi8qZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSovCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogWyJwb3N0Il0sCiAgY29tcG9uZW50czogewogICAgIndtLWNvbW1lbnRmb3JtIjogQ29tbWVudHNGb3JtLAogICAgIndtLWNvbW1lbnRzIjogQ29tbWVudHMKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBubGlrZXM6IHRoaXMucG9zdC5saWtlcy5sZW5ndGgsCiAgICAgIGxpa2VkOiBmYWxzZSwKICAgICAgY29tbWVudHM6IHRoaXMucG9zdC5jb21tZW50cywKICAgICAgZnJvbU5vdzogdGhpcy5wb3N0LmZyb21Ob3cKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBsaWtlKCkgewogICAgICBheGlvcwogICAgICAgIC5wb3N0KEFQSSArICJwb3N0cy8iICsgdGhpcy5wb3N0Ll9pZCArICIvbGlrZSIsIHsKICAgICAgICAgIHVzZXI6IFVTRVIKICAgICAgICB9KQogICAgICAgIC50aGVuKHAgPT4gewogICAgICAgICAgdGhpcy5ubGlrZXMgPSBwLmRhdGEubGlrZXMubGVuZ3RoOwogICAgICAgICAgdGhpcy5saWtlZCA9IHAuZGF0YS5saWtlcy5pbmNsdWRlcyh0aGlzLmlkKTsKICAgICAgICB9KTsKICAgIH0sCiAgICBnZXRDb21tZW50cygpIHsKICAgICAgYXhpb3MuZ2V0KEFQSSArICJwb3N0cy8iICsgdGhpcy5wb3N0Ll9pZCArICIvY29tbWVudHMiKS50aGVuKGRhdGEgPT4gewogICAgICAgIHRoaXMuY29tbWVudHMgPSBkYXRhLmRhdGE7CiAgICAgIH0pOwogICAgfSwKICAgIGlzTGlrZWQoKSB7CiAgICAgIHRoaXMubGlrZWQgPSB0aGlzLnBvc3QubGlrZXMuaW5jbHVkZXModGhpcy5pZCk7CiAgICB9LAogICAgdXBkYXRlRnJvbU5vdygpIHsKICAgICAgc2V0SW50ZXJ2YWwoKCkgPT4gewogICAgICAgIHRoaXMuZnJvbU5vdyA9IG1vbWVudCh0aGlzLnBvc3QuZGF0ZSkuZnJvbU5vdygpOwogICAgICB9LCA2MDAwMCk7CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgLy8gdGhpcy5nZXRDb21tZW50cygpOwogICAgdGhpcy5pc0xpa2VkKCk7CiAgICB0aGlzLnVwZGF0ZUZyb21Ob3coKTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBHZXR0ZXJzKHsKICAgICAgaWQ6ICJnZXRJZCIKICAgIH0pCiAgfQp9Owo="},{"version":3,"sources":["Post.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Post.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-card class=\"mb-2\">\n    <v-list-item three-line>\n      <v-menu v-model=\"menu\" top transition=\"slide-y-transition\" origin=\"bottom\">\n        <template v-slot:activator=\"{ on }\">\n          <v-list-item-avatar v-on=\"on\" size=\"40\" color=\"primary\">\n            <img :src=\"post.posted_by.image\" :alt=\"post.posted_by.nome\" />\n          </v-list-item-avatar>\n        </template>\n        <v-card width=\"280\">\n          <v-img :src=\"post.posted_by.image\"></v-img>\n          <v-list class=\"no-border\" dark tile>\n            <v-list-item>\n              <v-list-item-content>\n                <v-list-item-title>{{post.posted_by.nome}}</v-list-item-title>\n                <v-list-item-subtitle>{{post.posted_by.email}}</v-list-item-subtitle>\n              </v-list-item-content>\n              <v-list-item-action>\n                <v-btn icon @click=\"menu = false\">\n                  <v-icon>mdi-account-box</v-icon>\n                </v-btn>\n              </v-list-item-action>\n            </v-list-item>\n          </v-list>\n          <v-list-item @click=\"() => {}\">\n            <v-icon class=\"ma-auto\">mdi-message-text</v-icon>\n          </v-list-item>\n        </v-card>\n      </v-menu>\n\n      <v-list-item-content>\n        <v-list-item-title class=\"headline mb-0\">{{post.title}}</v-list-item-title>\n        <v-list-item-action-text>{{fromNow}}</v-list-item-action-text>\n        <v-chip-group column>\n          <v-chip v-for=\"tag in post.tags\" :key=\"tag\">{{ tag }}</v-chip>\n        </v-chip-group>\n\n        <v-list-item-action-text class=\"black--text mt-2 body-1\">{{post.body}}</v-list-item-action-text>\n      </v-list-item-content>\n    </v-list-item>\n    <v-card-actions class=\"d-flex flex-row-reverse\">\n      <v-btn @click=\"like\" class=\"indigo\" text rounded>\n        <span class=\"white--text text-lowercase mr-2\">{{ nlikes }}</span>\n        <v-icon v-if=\"liked\" color=\"white\">mdi-thumb-up</v-icon>\n        <v-icon v-else color=\"white\">mdi-thumb-up-outline</v-icon>\n      </v-btn>\n    </v-card-actions>\n\n    <wm-comments @newLike=\"getComments\" :postid=\"post._id\" :coms=\"comments\"></wm-comments>\n    <wm-commentform @newComment=\"getComments\" :postid=\"post._id\"></wm-commentform>\n  </v-card>\n</template>\n\n<script>\nimport { USER, API } from \"../../config/config\";\nimport CommentsForm from \"../components/CommentsForm\";\nimport Comments from \"../components/Comments\";\nimport axios from \"axios\";\nimport { mapGetters } from \"vuex\";\nimport moment from \"moment\";\n\n/*eslint-disable no-console*/\nexport default {\n  props: [\"post\"],\n  components: {\n    \"wm-commentform\": CommentsForm,\n    \"wm-comments\": Comments\n  },\n  data() {\n    return {\n      nlikes: this.post.likes.length,\n      liked: false,\n      comments: this.post.comments,\n      fromNow: this.post.fromNow\n    };\n  },\n  methods: {\n    like() {\n      axios\n        .post(API + \"posts/\" + this.post._id + \"/like\", {\n          user: USER\n        })\n        .then(p => {\n          this.nlikes = p.data.likes.length;\n          this.liked = p.data.likes.includes(this.id);\n        });\n    },\n    getComments() {\n      axios.get(API + \"posts/\" + this.post._id + \"/comments\").then(data => {\n        this.comments = data.data;\n      });\n    },\n    isLiked() {\n      this.liked = this.post.likes.includes(this.id);\n    },\n    updateFromNow() {\n      setInterval(() => {\n        this.fromNow = moment(this.post.date).fromNow();\n      }, 60000);\n    }\n  },\n  mounted() {\n    // this.getComments();\n    this.isLiked();\n    this.updateFromNow();\n  },\n  computed: {\n    ...mapGetters({\n      id: \"getId\"\n    })\n  }\n};\n</script>\n\n<style scoped>\n.no-border {\n  border-radius: 0px;\n}\n</style>"]}]}